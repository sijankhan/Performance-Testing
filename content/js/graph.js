/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 92.0, "minX": 0.0, "maxY": 64705.0, "series": [{"data": [[0.0, 96.0], [0.1, 97.0], [0.2, 98.0], [0.3, 98.0], [0.4, 99.0], [0.5, 100.0], [0.6, 100.0], [0.7, 100.0], [0.8, 101.0], [0.9, 101.0], [1.0, 101.0], [1.1, 101.0], [1.2, 101.0], [1.3, 103.0], [1.4, 103.0], [1.5, 103.0], [1.6, 104.0], [1.7, 104.0], [1.8, 104.0], [1.9, 104.0], [2.0, 105.0], [2.1, 105.0], [2.2, 105.0], [2.3, 105.0], [2.4, 106.0], [2.5, 106.0], [2.6, 106.0], [2.7, 106.0], [2.8, 106.0], [2.9, 106.0], [3.0, 107.0], [3.1, 107.0], [3.2, 107.0], [3.3, 107.0], [3.4, 108.0], [3.5, 108.0], [3.6, 108.0], [3.7, 108.0], [3.8, 109.0], [3.9, 109.0], [4.0, 109.0], [4.1, 109.0], [4.2, 109.0], [4.3, 110.0], [4.4, 110.0], [4.5, 110.0], [4.6, 110.0], [4.7, 110.0], [4.8, 110.0], [4.9, 110.0], [5.0, 111.0], [5.1, 111.0], [5.2, 111.0], [5.3, 111.0], [5.4, 112.0], [5.5, 112.0], [5.6, 112.0], [5.7, 112.0], [5.8, 112.0], [5.9, 112.0], [6.0, 112.0], [6.1, 112.0], [6.2, 113.0], [6.3, 113.0], [6.4, 113.0], [6.5, 113.0], [6.6, 113.0], [6.7, 113.0], [6.8, 113.0], [6.9, 113.0], [7.0, 113.0], [7.1, 114.0], [7.2, 114.0], [7.3, 114.0], [7.4, 114.0], [7.5, 114.0], [7.6, 114.0], [7.7, 114.0], [7.8, 115.0], [7.9, 115.0], [8.0, 115.0], [8.1, 115.0], [8.2, 115.0], [8.3, 115.0], [8.4, 115.0], [8.5, 116.0], [8.6, 116.0], [8.7, 116.0], [8.8, 116.0], [8.9, 116.0], [9.0, 116.0], [9.1, 117.0], [9.2, 117.0], [9.3, 117.0], [9.4, 117.0], [9.5, 117.0], [9.6, 117.0], [9.7, 117.0], [9.8, 118.0], [9.9, 118.0], [10.0, 118.0], [10.1, 118.0], [10.2, 118.0], [10.3, 119.0], [10.4, 119.0], [10.5, 119.0], [10.6, 119.0], [10.7, 119.0], [10.8, 119.0], [10.9, 119.0], [11.0, 119.0], [11.1, 120.0], [11.2, 120.0], [11.3, 120.0], [11.4, 120.0], [11.5, 120.0], [11.6, 120.0], [11.7, 120.0], [11.8, 120.0], [11.9, 120.0], [12.0, 120.0], [12.1, 120.0], [12.2, 121.0], [12.3, 121.0], [12.4, 121.0], [12.5, 121.0], [12.6, 121.0], [12.7, 121.0], [12.8, 121.0], [12.9, 121.0], [13.0, 121.0], [13.1, 122.0], [13.2, 122.0], [13.3, 122.0], [13.4, 122.0], [13.5, 122.0], [13.6, 122.0], [13.7, 122.0], [13.8, 122.0], [13.9, 123.0], [14.0, 123.0], [14.1, 123.0], [14.2, 123.0], [14.3, 123.0], [14.4, 123.0], [14.5, 123.0], [14.6, 123.0], [14.7, 123.0], [14.8, 124.0], [14.9, 124.0], [15.0, 124.0], [15.1, 124.0], [15.2, 124.0], [15.3, 124.0], [15.4, 124.0], [15.5, 125.0], [15.6, 125.0], [15.7, 125.0], [15.8, 125.0], [15.9, 125.0], [16.0, 125.0], [16.1, 125.0], [16.2, 126.0], [16.3, 126.0], [16.4, 126.0], [16.5, 126.0], [16.6, 126.0], [16.7, 126.0], [16.8, 126.0], [16.9, 126.0], [17.0, 127.0], [17.1, 127.0], [17.2, 127.0], [17.3, 127.0], [17.4, 127.0], [17.5, 127.0], [17.6, 127.0], [17.7, 128.0], [17.8, 128.0], [17.9, 128.0], [18.0, 128.0], [18.1, 128.0], [18.2, 128.0], [18.3, 128.0], [18.4, 129.0], [18.5, 129.0], [18.6, 129.0], [18.7, 129.0], [18.8, 129.0], [18.9, 129.0], [19.0, 129.0], [19.1, 130.0], [19.2, 130.0], [19.3, 130.0], [19.4, 130.0], [19.5, 130.0], [19.6, 131.0], [19.7, 131.0], [19.8, 131.0], [19.9, 131.0], [20.0, 131.0], [20.1, 132.0], [20.2, 132.0], [20.3, 132.0], [20.4, 132.0], [20.5, 132.0], [20.6, 132.0], [20.7, 133.0], [20.8, 133.0], [20.9, 133.0], [21.0, 133.0], [21.1, 134.0], [21.2, 135.0], [21.3, 135.0], [21.4, 135.0], [21.5, 135.0], [21.6, 136.0], [21.7, 136.0], [21.8, 137.0], [21.9, 137.0], [22.0, 137.0], [22.1, 138.0], [22.2, 138.0], [22.3, 138.0], [22.4, 139.0], [22.5, 139.0], [22.6, 139.0], [22.7, 139.0], [22.8, 140.0], [22.9, 140.0], [23.0, 141.0], [23.1, 142.0], [23.2, 143.0], [23.3, 143.0], [23.4, 143.0], [23.5, 143.0], [23.6, 143.0], [23.7, 143.0], [23.8, 144.0], [23.9, 144.0], [24.0, 145.0], [24.1, 145.0], [24.2, 145.0], [24.3, 146.0], [24.4, 146.0], [24.5, 147.0], [24.6, 148.0], [24.7, 149.0], [24.8, 149.0], [24.9, 149.0], [25.0, 150.0], [25.1, 151.0], [25.2, 152.0], [25.3, 153.0], [25.4, 153.0], [25.5, 154.0], [25.6, 155.0], [25.7, 155.0], [25.8, 156.0], [25.9, 156.0], [26.0, 157.0], [26.1, 157.0], [26.2, 157.0], [26.3, 158.0], [26.4, 159.0], [26.5, 159.0], [26.6, 160.0], [26.7, 160.0], [26.8, 161.0], [26.9, 161.0], [27.0, 162.0], [27.1, 162.0], [27.2, 163.0], [27.3, 163.0], [27.4, 164.0], [27.5, 164.0], [27.6, 165.0], [27.7, 166.0], [27.8, 167.0], [27.9, 167.0], [28.0, 168.0], [28.1, 168.0], [28.2, 168.0], [28.3, 169.0], [28.4, 170.0], [28.5, 170.0], [28.6, 171.0], [28.7, 172.0], [28.8, 172.0], [28.9, 173.0], [29.0, 175.0], [29.1, 175.0], [29.2, 175.0], [29.3, 176.0], [29.4, 176.0], [29.5, 176.0], [29.6, 177.0], [29.7, 177.0], [29.8, 178.0], [29.9, 178.0], [30.0, 179.0], [30.1, 179.0], [30.2, 179.0], [30.3, 180.0], [30.4, 181.0], [30.5, 181.0], [30.6, 181.0], [30.7, 181.0], [30.8, 181.0], [30.9, 182.0], [31.0, 183.0], [31.1, 183.0], [31.2, 184.0], [31.3, 184.0], [31.4, 185.0], [31.5, 185.0], [31.6, 186.0], [31.7, 187.0], [31.8, 187.0], [31.9, 188.0], [32.0, 188.0], [32.1, 188.0], [32.2, 189.0], [32.3, 189.0], [32.4, 190.0], [32.5, 190.0], [32.6, 190.0], [32.7, 191.0], [32.8, 192.0], [32.9, 192.0], [33.0, 193.0], [33.1, 195.0], [33.2, 195.0], [33.3, 195.0], [33.4, 196.0], [33.5, 196.0], [33.6, 196.0], [33.7, 197.0], [33.8, 197.0], [33.9, 197.0], [34.0, 198.0], [34.1, 198.0], [34.2, 199.0], [34.3, 199.0], [34.4, 199.0], [34.5, 200.0], [34.6, 201.0], [34.7, 201.0], [34.8, 201.0], [34.9, 202.0], [35.0, 202.0], [35.1, 203.0], [35.2, 204.0], [35.3, 204.0], [35.4, 205.0], [35.5, 206.0], [35.6, 208.0], [35.7, 208.0], [35.8, 210.0], [35.9, 211.0], [36.0, 211.0], [36.1, 212.0], [36.2, 212.0], [36.3, 212.0], [36.4, 213.0], [36.5, 215.0], [36.6, 215.0], [36.7, 215.0], [36.8, 216.0], [36.9, 217.0], [37.0, 218.0], [37.1, 219.0], [37.2, 220.0], [37.3, 220.0], [37.4, 220.0], [37.5, 221.0], [37.6, 222.0], [37.7, 222.0], [37.8, 223.0], [37.9, 223.0], [38.0, 223.0], [38.1, 223.0], [38.2, 225.0], [38.3, 225.0], [38.4, 226.0], [38.5, 226.0], [38.6, 227.0], [38.7, 227.0], [38.8, 227.0], [38.9, 227.0], [39.0, 228.0], [39.1, 229.0], [39.2, 229.0], [39.3, 229.0], [39.4, 230.0], [39.5, 230.0], [39.6, 230.0], [39.7, 230.0], [39.8, 231.0], [39.9, 231.0], [40.0, 232.0], [40.1, 232.0], [40.2, 232.0], [40.3, 234.0], [40.4, 234.0], [40.5, 235.0], [40.6, 236.0], [40.7, 236.0], [40.8, 236.0], [40.9, 236.0], [41.0, 237.0], [41.1, 237.0], [41.2, 237.0], [41.3, 238.0], [41.4, 238.0], [41.5, 238.0], [41.6, 239.0], [41.7, 239.0], [41.8, 240.0], [41.9, 241.0], [42.0, 241.0], [42.1, 242.0], [42.2, 242.0], [42.3, 243.0], [42.4, 244.0], [42.5, 245.0], [42.6, 245.0], [42.7, 245.0], [42.8, 246.0], [42.9, 246.0], [43.0, 247.0], [43.1, 247.0], [43.2, 249.0], [43.3, 249.0], [43.4, 250.0], [43.5, 251.0], [43.6, 252.0], [43.7, 252.0], [43.8, 253.0], [43.9, 253.0], [44.0, 254.0], [44.1, 255.0], [44.2, 256.0], [44.3, 256.0], [44.4, 258.0], [44.5, 259.0], [44.6, 260.0], [44.7, 260.0], [44.8, 260.0], [44.9, 261.0], [45.0, 263.0], [45.1, 265.0], [45.2, 266.0], [45.3, 267.0], [45.4, 268.0], [45.5, 268.0], [45.6, 269.0], [45.7, 269.0], [45.8, 270.0], [45.9, 270.0], [46.0, 271.0], [46.1, 271.0], [46.2, 272.0], [46.3, 272.0], [46.4, 273.0], [46.5, 273.0], [46.6, 274.0], [46.7, 274.0], [46.8, 276.0], [46.9, 276.0], [47.0, 277.0], [47.1, 277.0], [47.2, 278.0], [47.3, 279.0], [47.4, 279.0], [47.5, 280.0], [47.6, 281.0], [47.7, 281.0], [47.8, 283.0], [47.9, 283.0], [48.0, 284.0], [48.1, 285.0], [48.2, 288.0], [48.3, 289.0], [48.4, 290.0], [48.5, 290.0], [48.6, 291.0], [48.7, 292.0], [48.8, 293.0], [48.9, 294.0], [49.0, 296.0], [49.1, 297.0], [49.2, 297.0], [49.3, 299.0], [49.4, 300.0], [49.5, 300.0], [49.6, 301.0], [49.7, 302.0], [49.8, 302.0], [49.9, 303.0], [50.0, 304.0], [50.1, 305.0], [50.2, 307.0], [50.3, 308.0], [50.4, 310.0], [50.5, 311.0], [50.6, 312.0], [50.7, 313.0], [50.8, 315.0], [50.9, 317.0], [51.0, 317.0], [51.1, 318.0], [51.2, 319.0], [51.3, 320.0], [51.4, 321.0], [51.5, 322.0], [51.6, 324.0], [51.7, 324.0], [51.8, 326.0], [51.9, 327.0], [52.0, 328.0], [52.1, 329.0], [52.2, 330.0], [52.3, 330.0], [52.4, 331.0], [52.5, 332.0], [52.6, 333.0], [52.7, 333.0], [52.8, 335.0], [52.9, 335.0], [53.0, 337.0], [53.1, 337.0], [53.2, 337.0], [53.3, 338.0], [53.4, 340.0], [53.5, 340.0], [53.6, 342.0], [53.7, 342.0], [53.8, 343.0], [53.9, 343.0], [54.0, 344.0], [54.1, 346.0], [54.2, 346.0], [54.3, 347.0], [54.4, 349.0], [54.5, 350.0], [54.6, 351.0], [54.7, 352.0], [54.8, 353.0], [54.9, 353.0], [55.0, 354.0], [55.1, 355.0], [55.2, 357.0], [55.3, 358.0], [55.4, 359.0], [55.5, 359.0], [55.6, 360.0], [55.7, 361.0], [55.8, 363.0], [55.9, 363.0], [56.0, 364.0], [56.1, 366.0], [56.2, 367.0], [56.3, 368.0], [56.4, 369.0], [56.5, 370.0], [56.6, 371.0], [56.7, 371.0], [56.8, 374.0], [56.9, 374.0], [57.0, 376.0], [57.1, 378.0], [57.2, 379.0], [57.3, 380.0], [57.4, 381.0], [57.5, 382.0], [57.6, 383.0], [57.7, 384.0], [57.8, 385.0], [57.9, 386.0], [58.0, 387.0], [58.1, 389.0], [58.2, 390.0], [58.3, 391.0], [58.4, 392.0], [58.5, 392.0], [58.6, 395.0], [58.7, 396.0], [58.8, 397.0], [58.9, 397.0], [59.0, 399.0], [59.1, 399.0], [59.2, 400.0], [59.3, 400.0], [59.4, 403.0], [59.5, 404.0], [59.6, 405.0], [59.7, 406.0], [59.8, 407.0], [59.9, 408.0], [60.0, 411.0], [60.1, 413.0], [60.2, 414.0], [60.3, 415.0], [60.4, 417.0], [60.5, 417.0], [60.6, 418.0], [60.7, 418.0], [60.8, 421.0], [60.9, 422.0], [61.0, 424.0], [61.1, 425.0], [61.2, 426.0], [61.3, 426.0], [61.4, 428.0], [61.5, 429.0], [61.6, 430.0], [61.7, 432.0], [61.8, 437.0], [61.9, 438.0], [62.0, 440.0], [62.1, 440.0], [62.2, 441.0], [62.3, 448.0], [62.4, 450.0], [62.5, 452.0], [62.6, 453.0], [62.7, 454.0], [62.8, 457.0], [62.9, 458.0], [63.0, 461.0], [63.1, 461.0], [63.2, 462.0], [63.3, 462.0], [63.4, 462.0], [63.5, 464.0], [63.6, 467.0], [63.7, 469.0], [63.8, 471.0], [63.9, 475.0], [64.0, 477.0], [64.1, 479.0], [64.2, 481.0], [64.3, 481.0], [64.4, 483.0], [64.5, 483.0], [64.6, 486.0], [64.7, 492.0], [64.8, 494.0], [64.9, 494.0], [65.0, 496.0], [65.1, 497.0], [65.2, 500.0], [65.3, 501.0], [65.4, 502.0], [65.5, 503.0], [65.6, 509.0], [65.7, 510.0], [65.8, 512.0], [65.9, 513.0], [66.0, 514.0], [66.1, 515.0], [66.2, 517.0], [66.3, 519.0], [66.4, 521.0], [66.5, 522.0], [66.6, 524.0], [66.7, 530.0], [66.8, 537.0], [66.9, 538.0], [67.0, 539.0], [67.1, 541.0], [67.2, 546.0], [67.3, 548.0], [67.4, 553.0], [67.5, 555.0], [67.6, 561.0], [67.7, 562.0], [67.8, 566.0], [67.9, 568.0], [68.0, 573.0], [68.1, 574.0], [68.2, 576.0], [68.3, 578.0], [68.4, 586.0], [68.5, 590.0], [68.6, 593.0], [68.7, 594.0], [68.8, 595.0], [68.9, 596.0], [69.0, 599.0], [69.1, 604.0], [69.2, 607.0], [69.3, 609.0], [69.4, 620.0], [69.5, 627.0], [69.6, 631.0], [69.7, 637.0], [69.8, 640.0], [69.9, 646.0], [70.0, 647.0], [70.1, 651.0], [70.2, 653.0], [70.3, 654.0], [70.4, 659.0], [70.5, 663.0], [70.6, 668.0], [70.7, 673.0], [70.8, 675.0], [70.9, 679.0], [71.0, 680.0], [71.1, 690.0], [71.2, 692.0], [71.3, 697.0], [71.4, 699.0], [71.5, 704.0], [71.6, 707.0], [71.7, 712.0], [71.8, 714.0], [71.9, 724.0], [72.0, 726.0], [72.1, 729.0], [72.2, 731.0], [72.3, 734.0], [72.4, 738.0], [72.5, 744.0], [72.6, 749.0], [72.7, 765.0], [72.8, 776.0], [72.9, 780.0], [73.0, 783.0], [73.1, 794.0], [73.2, 798.0], [73.3, 804.0], [73.4, 814.0], [73.5, 823.0], [73.6, 828.0], [73.7, 835.0], [73.8, 840.0], [73.9, 844.0], [74.0, 853.0], [74.1, 873.0], [74.2, 880.0], [74.3, 883.0], [74.4, 886.0], [74.5, 893.0], [74.6, 896.0], [74.7, 906.0], [74.8, 908.0], [74.9, 916.0], [75.0, 925.0], [75.1, 933.0], [75.2, 935.0], [75.3, 937.0], [75.4, 941.0], [75.5, 951.0], [75.6, 954.0], [75.7, 965.0], [75.8, 975.0], [75.9, 979.0], [76.0, 987.0], [76.1, 993.0], [76.2, 1000.0], [76.3, 1008.0], [76.4, 1048.0], [76.5, 1057.0], [76.6, 1061.0], [76.7, 1068.0], [76.8, 1076.0], [76.9, 1092.0], [77.0, 1108.0], [77.1, 1120.0], [77.2, 1130.0], [77.3, 1138.0], [77.4, 1143.0], [77.5, 1148.0], [77.6, 1153.0], [77.7, 1162.0], [77.8, 1167.0], [77.9, 1180.0], [78.0, 1187.0], [78.1, 1189.0], [78.2, 1195.0], [78.3, 1211.0], [78.4, 1220.0], [78.5, 1226.0], [78.6, 1239.0], [78.7, 1263.0], [78.8, 1271.0], [78.9, 1290.0], [79.0, 1290.0], [79.1, 1303.0], [79.2, 1308.0], [79.3, 1319.0], [79.4, 1322.0], [79.5, 1349.0], [79.6, 1354.0], [79.7, 1362.0], [79.8, 1380.0], [79.9, 1400.0], [80.0, 1409.0], [80.1, 1452.0], [80.2, 1455.0], [80.3, 1468.0], [80.4, 1473.0], [80.5, 1507.0], [80.6, 1538.0], [80.7, 1583.0], [80.8, 1592.0], [80.9, 1619.0], [81.0, 1644.0], [81.1, 1653.0], [81.2, 1667.0], [81.3, 1724.0], [81.4, 1745.0], [81.5, 1758.0], [81.6, 1769.0], [81.7, 1834.0], [81.8, 1853.0], [81.9, 1882.0], [82.0, 1889.0], [82.1, 1925.0], [82.2, 1930.0], [82.3, 1977.0], [82.4, 1989.0], [82.5, 2048.0], [82.6, 2059.0], [82.7, 2087.0], [82.8, 2109.0], [82.9, 2139.0], [83.0, 2214.0], [83.1, 2255.0], [83.2, 2276.0], [83.3, 2294.0], [83.4, 2312.0], [83.5, 2329.0], [83.6, 2344.0], [83.7, 2363.0], [83.8, 2374.0], [83.9, 2413.0], [84.0, 2427.0], [84.1, 2489.0], [84.2, 2509.0], [84.3, 2558.0], [84.4, 2625.0], [84.5, 2674.0], [84.6, 2701.0], [84.7, 2736.0], [84.8, 2779.0], [84.9, 2834.0], [85.0, 2884.0], [85.1, 2936.0], [85.2, 2944.0], [85.3, 2961.0], [85.4, 2999.0], [85.5, 3047.0], [85.6, 3059.0], [85.7, 3134.0], [85.8, 3201.0], [85.9, 3246.0], [86.0, 3263.0], [86.1, 3332.0], [86.2, 3357.0], [86.3, 3415.0], [86.4, 3473.0], [86.5, 3601.0], [86.6, 3735.0], [86.7, 3804.0], [86.8, 3857.0], [86.9, 3936.0], [87.0, 4021.0], [87.1, 4083.0], [87.2, 4127.0], [87.3, 4147.0], [87.4, 4191.0], [87.5, 4228.0], [87.6, 4292.0], [87.7, 4354.0], [87.8, 4365.0], [87.9, 4383.0], [88.0, 4495.0], [88.1, 4689.0], [88.2, 4759.0], [88.3, 4857.0], [88.4, 4875.0], [88.5, 4958.0], [88.6, 5032.0], [88.7, 5200.0], [88.8, 5405.0], [88.9, 5465.0], [89.0, 5538.0], [89.1, 5621.0], [89.2, 5700.0], [89.3, 5770.0], [89.4, 5826.0], [89.5, 5932.0], [89.6, 5958.0], [89.7, 6061.0], [89.8, 6226.0], [89.9, 6308.0], [90.0, 6343.0], [90.1, 6414.0], [90.2, 6454.0], [90.3, 6587.0], [90.4, 6704.0], [90.5, 6760.0], [90.6, 6786.0], [90.7, 6991.0], [90.8, 7056.0], [90.9, 7353.0], [91.0, 7586.0], [91.1, 7622.0], [91.2, 7674.0], [91.3, 7753.0], [91.4, 7952.0], [91.5, 8015.0], [91.6, 8086.0], [91.7, 8255.0], [91.8, 8347.0], [91.9, 8497.0], [92.0, 8944.0], [92.1, 8987.0], [92.2, 9039.0], [92.3, 9198.0], [92.4, 9237.0], [92.5, 9244.0], [92.6, 9382.0], [92.7, 9644.0], [92.8, 9758.0], [92.9, 9859.0], [93.0, 9974.0], [93.1, 10143.0], [93.2, 10402.0], [93.3, 10560.0], [93.4, 10605.0], [93.5, 10786.0], [93.6, 10813.0], [93.7, 10954.0], [93.8, 11007.0], [93.9, 11264.0], [94.0, 11343.0], [94.1, 11912.0], [94.2, 12045.0], [94.3, 12133.0], [94.4, 12218.0], [94.5, 12699.0], [94.6, 12941.0], [94.7, 13207.0], [94.8, 13426.0], [94.9, 13555.0], [95.0, 13658.0], [95.1, 13732.0], [95.2, 14109.0], [95.3, 14741.0], [95.4, 14991.0], [95.5, 15114.0], [95.6, 15506.0], [95.7, 15886.0], [95.8, 16096.0], [95.9, 16196.0], [96.0, 16311.0], [96.1, 16409.0], [96.2, 16597.0], [96.3, 16776.0], [96.4, 16872.0], [96.5, 17116.0], [96.6, 17183.0], [96.7, 17698.0], [96.8, 18543.0], [96.9, 18722.0], [97.0, 18972.0], [97.1, 19541.0], [97.2, 19718.0], [97.3, 20820.0], [97.4, 21497.0], [97.5, 21977.0], [97.6, 22565.0], [97.7, 22924.0], [97.8, 23611.0], [97.9, 24355.0], [98.0, 24827.0], [98.1, 25193.0], [98.2, 25293.0], [98.3, 26467.0], [98.4, 26950.0], [98.5, 27206.0], [98.6, 27394.0], [98.7, 29027.0], [98.8, 29305.0], [98.9, 30053.0], [99.0, 30641.0], [99.1, 31946.0], [99.2, 32265.0], [99.3, 33611.0], [99.4, 34683.0], [99.5, 36689.0], [99.6, 38186.0], [99.7, 38954.0], [99.8, 40889.0], [99.9, 46386.0], [100.0, 48168.0]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/medicines/get_med_by_dis_alias_w_pag", "isController": false}, {"data": [[0.0, 1824.0], [0.1, 1824.0], [0.2, 2368.0], [0.3, 2368.0], [0.4, 2560.0], [0.5, 2560.0], [0.6, 2560.0], [0.7, 2620.0], [0.8, 2764.0], [0.9, 2764.0], [1.0, 2829.0], [1.1, 2829.0], [1.2, 3082.0], [1.3, 3082.0], [1.4, 3130.0], [1.5, 3130.0], [1.6, 3157.0], [1.7, 3157.0], [1.8, 3333.0], [1.9, 3333.0], [2.0, 3447.0], [2.1, 3447.0], [2.2, 3486.0], [2.3, 3486.0], [2.4, 3522.0], [2.5, 3522.0], [2.6, 3542.0], [2.7, 3542.0], [2.8, 3542.0], [2.9, 3571.0], [3.0, 3571.0], [3.1, 3628.0], [3.2, 3628.0], [3.3, 3641.0], [3.4, 3641.0], [3.5, 3744.0], [3.6, 3744.0], [3.7, 3759.0], [3.8, 3759.0], [3.9, 3772.0], [4.0, 3772.0], [4.1, 3912.0], [4.2, 3912.0], [4.3, 3924.0], [4.4, 3924.0], [4.5, 4039.0], [4.6, 4039.0], [4.7, 4077.0], [4.8, 4077.0], [4.9, 4103.0], [5.0, 4103.0], [5.1, 4194.0], [5.2, 4194.0], [5.3, 4361.0], [5.4, 4361.0], [5.5, 4374.0], [5.6, 4374.0], [5.7, 4623.0], [5.8, 4623.0], [5.9, 4681.0], [6.0, 4681.0], [6.1, 4759.0], [6.2, 4759.0], [6.3, 4977.0], [6.4, 4977.0], [6.5, 5127.0], [6.6, 5127.0], [6.7, 5130.0], [6.8, 5130.0], [6.9, 5185.0], [7.0, 5185.0], [7.1, 5202.0], [7.2, 5202.0], [7.3, 5294.0], [7.4, 5294.0], [7.5, 5484.0], [7.6, 5484.0], [7.7, 5538.0], [7.8, 5538.0], [7.9, 5585.0], [8.0, 5585.0], [8.1, 5600.0], [8.2, 5600.0], [8.3, 5600.0], [8.4, 5600.0], [8.5, 5644.0], [8.6, 5644.0], [8.7, 5869.0], [8.8, 5869.0], [8.9, 5989.0], [9.0, 5989.0], [9.1, 6019.0], [9.2, 6019.0], [9.3, 6244.0], [9.4, 6311.0], [9.5, 6311.0], [9.6, 6416.0], [9.7, 6416.0], [9.8, 6438.0], [9.9, 6438.0], [10.0, 6557.0], [10.1, 6557.0], [10.2, 6613.0], [10.3, 6613.0], [10.4, 6655.0], [10.5, 6655.0], [10.6, 6803.0], [10.7, 6803.0], [10.8, 6824.0], [10.9, 6824.0], [11.0, 6882.0], [11.1, 6882.0], [11.2, 6981.0], [11.3, 6981.0], [11.4, 7018.0], [11.5, 7018.0], [11.6, 7092.0], [11.7, 7092.0], [11.8, 7145.0], [11.9, 7145.0], [12.0, 7157.0], [12.1, 7157.0], [12.2, 7208.0], [12.3, 7208.0], [12.4, 7249.0], [12.5, 7249.0], [12.6, 7311.0], [12.7, 7311.0], [12.8, 7541.0], [12.9, 7541.0], [13.0, 7546.0], [13.1, 7546.0], [13.2, 7610.0], [13.3, 7610.0], [13.4, 7838.0], [13.5, 7838.0], [13.6, 7874.0], [13.7, 7874.0], [13.8, 7874.0], [13.9, 7874.0], [14.0, 8107.0], [14.1, 8107.0], [14.2, 8243.0], [14.3, 8243.0], [14.4, 8262.0], [14.5, 8262.0], [14.6, 8296.0], [14.7, 8296.0], [14.8, 8317.0], [14.9, 8317.0], [15.0, 8317.0], [15.1, 8317.0], [15.2, 8329.0], [15.3, 8329.0], [15.4, 8448.0], [15.5, 8448.0], [15.6, 8557.0], [15.7, 8557.0], [15.8, 8589.0], [15.9, 8589.0], [16.0, 8684.0], [16.1, 8684.0], [16.2, 8698.0], [16.3, 8698.0], [16.4, 8783.0], [16.5, 8783.0], [16.6, 8799.0], [16.7, 8799.0], [16.8, 8872.0], [16.9, 8872.0], [17.0, 8879.0], [17.1, 8879.0], [17.2, 8896.0], [17.3, 8896.0], [17.4, 8897.0], [17.5, 8897.0], [17.6, 9033.0], [17.7, 9033.0], [17.8, 9180.0], [17.9, 9180.0], [18.0, 9199.0], [18.1, 9199.0], [18.2, 9242.0], [18.3, 9242.0], [18.4, 9254.0], [18.5, 9254.0], [18.6, 9299.0], [18.7, 9299.0], [18.8, 9360.0], [18.9, 9360.0], [19.0, 9426.0], [19.1, 9426.0], [19.2, 9490.0], [19.3, 9490.0], [19.4, 9501.0], [19.5, 9501.0], [19.6, 9505.0], [19.7, 9505.0], [19.8, 9705.0], [19.9, 9705.0], [20.0, 9714.0], [20.1, 9714.0], [20.2, 9718.0], [20.3, 9718.0], [20.4, 9812.0], [20.5, 9812.0], [20.6, 9923.0], [20.7, 9923.0], [20.8, 10042.0], [20.9, 10042.0], [21.0, 10059.0], [21.1, 10059.0], [21.2, 10108.0], [21.3, 10108.0], [21.4, 10257.0], [21.5, 10257.0], [21.6, 10292.0], [21.7, 10292.0], [21.8, 10306.0], [21.9, 10306.0], [22.0, 10374.0], [22.1, 10374.0], [22.2, 10375.0], [22.3, 10375.0], [22.4, 10444.0], [22.5, 10444.0], [22.6, 10457.0], [22.7, 10457.0], [22.8, 10467.0], [22.9, 10467.0], [23.0, 10604.0], [23.1, 10604.0], [23.2, 10607.0], [23.3, 10607.0], [23.4, 10698.0], [23.5, 10698.0], [23.6, 10866.0], [23.7, 10866.0], [23.8, 10875.0], [23.9, 10875.0], [24.0, 10880.0], [24.1, 10880.0], [24.2, 10881.0], [24.3, 10881.0], [24.4, 10893.0], [24.5, 10893.0], [24.6, 10943.0], [24.7, 10943.0], [24.8, 10954.0], [24.9, 10954.0], [25.0, 10970.0], [25.1, 10970.0], [25.2, 10974.0], [25.3, 10974.0], [25.4, 10975.0], [25.5, 10975.0], [25.6, 11145.0], [25.7, 11145.0], [25.8, 11184.0], [25.9, 11184.0], [26.0, 11287.0], [26.1, 11287.0], [26.2, 11435.0], [26.3, 11435.0], [26.4, 11440.0], [26.5, 11440.0], [26.6, 11470.0], [26.7, 11470.0], [26.8, 11728.0], [26.9, 11728.0], [27.0, 11875.0], [27.1, 11875.0], [27.2, 11878.0], [27.3, 11878.0], [27.4, 11898.0], [27.5, 11898.0], [27.6, 11931.0], [27.7, 11931.0], [27.8, 11979.0], [27.9, 11979.0], [28.0, 12110.0], [28.1, 12110.0], [28.2, 12209.0], [28.3, 12209.0], [28.4, 12276.0], [28.5, 12276.0], [28.6, 12309.0], [28.7, 12309.0], [28.8, 12311.0], [28.9, 12311.0], [29.0, 12392.0], [29.1, 12392.0], [29.2, 12414.0], [29.3, 12414.0], [29.4, 12438.0], [29.5, 12438.0], [29.6, 12530.0], [29.7, 12530.0], [29.8, 12642.0], [29.9, 12642.0], [30.0, 12803.0], [30.1, 12803.0], [30.2, 12847.0], [30.3, 12847.0], [30.4, 12870.0], [30.5, 12870.0], [30.6, 12929.0], [30.7, 12929.0], [30.8, 12939.0], [30.9, 12939.0], [31.0, 13006.0], [31.1, 13006.0], [31.2, 13024.0], [31.3, 13024.0], [31.4, 13062.0], [31.5, 13062.0], [31.6, 13105.0], [31.7, 13105.0], [31.8, 13110.0], [31.9, 13110.0], [32.0, 13232.0], [32.1, 13232.0], [32.2, 13297.0], [32.3, 13297.0], [32.4, 13314.0], [32.5, 13314.0], [32.6, 13354.0], [32.7, 13354.0], [32.8, 13388.0], [32.9, 13388.0], [33.0, 13457.0], [33.1, 13457.0], [33.2, 13524.0], [33.3, 13524.0], [33.4, 13562.0], [33.5, 13562.0], [33.6, 13603.0], [33.7, 13603.0], [33.8, 13676.0], [33.9, 13676.0], [34.0, 13689.0], [34.1, 13689.0], [34.2, 13715.0], [34.3, 13715.0], [34.4, 13734.0], [34.5, 13734.0], [34.6, 13758.0], [34.7, 13758.0], [34.8, 13789.0], [34.9, 13789.0], [35.0, 13808.0], [35.1, 13808.0], [35.2, 13901.0], [35.3, 13901.0], [35.4, 13909.0], [35.5, 13909.0], [35.6, 14081.0], [35.7, 14081.0], [35.8, 14101.0], [35.9, 14101.0], [36.0, 14124.0], [36.1, 14124.0], [36.2, 14175.0], [36.3, 14175.0], [36.4, 14241.0], [36.5, 14241.0], [36.6, 14323.0], [36.7, 14323.0], [36.8, 14462.0], [36.9, 14462.0], [37.0, 14571.0], [37.1, 14571.0], [37.2, 14632.0], [37.3, 14632.0], [37.4, 14636.0], [37.5, 14636.0], [37.6, 14658.0], [37.7, 14658.0], [37.8, 14658.0], [37.9, 14782.0], [38.0, 14782.0], [38.1, 14804.0], [38.2, 14804.0], [38.3, 14843.0], [38.4, 14843.0], [38.5, 14871.0], [38.6, 14871.0], [38.7, 14923.0], [38.8, 14923.0], [38.9, 14926.0], [39.0, 14926.0], [39.1, 14935.0], [39.2, 14935.0], [39.3, 14975.0], [39.4, 14975.0], [39.5, 14995.0], [39.6, 14995.0], [39.7, 15044.0], [39.8, 15044.0], [39.9, 15075.0], [40.0, 15075.0], [40.1, 15136.0], [40.2, 15136.0], [40.3, 15191.0], [40.4, 15191.0], [40.5, 15212.0], [40.6, 15212.0], [40.7, 15232.0], [40.8, 15232.0], [40.9, 15237.0], [41.0, 15237.0], [41.1, 15357.0], [41.2, 15357.0], [41.3, 15383.0], [41.4, 15383.0], [41.5, 15398.0], [41.6, 15398.0], [41.7, 15406.0], [41.8, 15406.0], [41.9, 15556.0], [42.0, 15556.0], [42.1, 15605.0], [42.2, 15605.0], [42.3, 15656.0], [42.4, 15656.0], [42.5, 15667.0], [42.6, 15667.0], [42.7, 15692.0], [42.8, 15692.0], [42.9, 15728.0], [43.0, 15728.0], [43.1, 15754.0], [43.2, 15754.0], [43.3, 15788.0], [43.4, 15788.0], [43.5, 15829.0], [43.6, 15829.0], [43.7, 15886.0], [43.8, 15886.0], [43.9, 15961.0], [44.0, 15961.0], [44.1, 16021.0], [44.2, 16021.0], [44.3, 16095.0], [44.4, 16095.0], [44.5, 16127.0], [44.6, 16127.0], [44.7, 16143.0], [44.8, 16143.0], [44.9, 16151.0], [45.0, 16151.0], [45.1, 16156.0], [45.2, 16156.0], [45.3, 16158.0], [45.4, 16158.0], [45.5, 16201.0], [45.6, 16201.0], [45.7, 16251.0], [45.8, 16251.0], [45.9, 16303.0], [46.0, 16303.0], [46.1, 16389.0], [46.2, 16389.0], [46.3, 16429.0], [46.4, 16429.0], [46.5, 16508.0], [46.6, 16508.0], [46.7, 16654.0], [46.8, 16654.0], [46.9, 16662.0], [47.0, 16662.0], [47.1, 16669.0], [47.2, 16669.0], [47.3, 16784.0], [47.4, 16784.0], [47.5, 16798.0], [47.6, 16798.0], [47.7, 16939.0], [47.8, 16939.0], [47.9, 16951.0], [48.0, 16951.0], [48.1, 16998.0], [48.2, 16998.0], [48.3, 17018.0], [48.4, 17018.0], [48.5, 17043.0], [48.6, 17043.0], [48.7, 17203.0], [48.8, 17203.0], [48.9, 17223.0], [49.0, 17223.0], [49.1, 17396.0], [49.2, 17396.0], [49.3, 17435.0], [49.4, 17435.0], [49.5, 17438.0], [49.6, 17438.0], [49.7, 17461.0], [49.8, 17461.0], [49.9, 17479.0], [50.0, 17479.0], [50.1, 17564.0], [50.2, 17564.0], [50.3, 17695.0], [50.4, 17695.0], [50.5, 17728.0], [50.6, 17728.0], [50.7, 17753.0], [50.8, 17753.0], [50.9, 17835.0], [51.0, 17835.0], [51.1, 17871.0], [51.2, 17871.0], [51.3, 17931.0], [51.4, 17931.0], [51.5, 17940.0], [51.6, 17940.0], [51.7, 17944.0], [51.8, 17944.0], [51.9, 18134.0], [52.0, 18134.0], [52.1, 18183.0], [52.2, 18183.0], [52.3, 18199.0], [52.4, 18199.0], [52.5, 18228.0], [52.6, 18228.0], [52.7, 18356.0], [52.8, 18356.0], [52.9, 18384.0], [53.0, 18384.0], [53.1, 18395.0], [53.2, 18395.0], [53.3, 18398.0], [53.4, 18398.0], [53.5, 18448.0], [53.6, 18448.0], [53.7, 18495.0], [53.8, 18495.0], [53.9, 18513.0], [54.0, 18513.0], [54.1, 18537.0], [54.2, 18537.0], [54.3, 18614.0], [54.4, 18614.0], [54.5, 18626.0], [54.6, 18626.0], [54.7, 18645.0], [54.8, 18645.0], [54.9, 18708.0], [55.0, 18708.0], [55.1, 18800.0], [55.2, 18800.0], [55.3, 18802.0], [55.4, 18802.0], [55.5, 18936.0], [55.6, 18936.0], [55.7, 18944.0], [55.8, 18944.0], [55.9, 18959.0], [56.0, 18959.0], [56.1, 18960.0], [56.2, 18960.0], [56.3, 18960.0], [56.4, 18960.0], [56.5, 18965.0], [56.6, 18965.0], [56.7, 18978.0], [56.8, 18978.0], [56.9, 19028.0], [57.0, 19028.0], [57.1, 19028.0], [57.2, 19028.0], [57.3, 19044.0], [57.4, 19044.0], [57.5, 19080.0], [57.6, 19080.0], [57.7, 19162.0], [57.8, 19162.0], [57.9, 19218.0], [58.0, 19218.0], [58.1, 19260.0], [58.2, 19260.0], [58.3, 19281.0], [58.4, 19281.0], [58.5, 19305.0], [58.6, 19305.0], [58.7, 19329.0], [58.8, 19329.0], [58.9, 19378.0], [59.0, 19378.0], [59.1, 19399.0], [59.2, 19399.0], [59.3, 19441.0], [59.4, 19441.0], [59.5, 19522.0], [59.6, 19522.0], [59.7, 19586.0], [59.8, 19586.0], [59.9, 19621.0], [60.0, 19621.0], [60.1, 19696.0], [60.2, 19696.0], [60.3, 19766.0], [60.4, 19766.0], [60.5, 19781.0], [60.6, 19781.0], [60.7, 19908.0], [60.8, 19908.0], [60.9, 19983.0], [61.0, 19983.0], [61.1, 20002.0], [61.2, 20002.0], [61.3, 20059.0], [61.4, 20059.0], [61.5, 20162.0], [61.6, 20162.0], [61.7, 20171.0], [61.8, 20171.0], [61.9, 20190.0], [62.0, 20190.0], [62.1, 20286.0], [62.2, 20286.0], [62.3, 20318.0], [62.4, 20318.0], [62.5, 20363.0], [62.6, 20363.0], [62.7, 20492.0], [62.8, 20492.0], [62.9, 20557.0], [63.0, 20557.0], [63.1, 20790.0], [63.2, 20790.0], [63.3, 20855.0], [63.4, 20855.0], [63.5, 20924.0], [63.6, 20924.0], [63.7, 21044.0], [63.8, 21044.0], [63.9, 21060.0], [64.0, 21060.0], [64.1, 21082.0], [64.2, 21082.0], [64.3, 21099.0], [64.4, 21099.0], [64.5, 21118.0], [64.6, 21118.0], [64.7, 21211.0], [64.8, 21211.0], [64.9, 21403.0], [65.0, 21403.0], [65.1, 21435.0], [65.2, 21435.0], [65.3, 21467.0], [65.4, 21467.0], [65.5, 21472.0], [65.6, 21472.0], [65.7, 21483.0], [65.8, 21483.0], [65.9, 21486.0], [66.0, 21486.0], [66.1, 21583.0], [66.2, 21583.0], [66.3, 21685.0], [66.4, 21685.0], [66.5, 21702.0], [66.6, 21702.0], [66.7, 21753.0], [66.8, 21753.0], [66.9, 21761.0], [67.0, 21761.0], [67.1, 21779.0], [67.2, 21779.0], [67.3, 21834.0], [67.4, 21834.0], [67.5, 21834.0], [67.6, 21834.0], [67.7, 21974.0], [67.8, 21974.0], [67.9, 22015.0], [68.0, 22015.0], [68.1, 22219.0], [68.2, 22219.0], [68.3, 22233.0], [68.4, 22233.0], [68.5, 22256.0], [68.6, 22256.0], [68.7, 22352.0], [68.8, 22352.0], [68.9, 22456.0], [69.0, 22456.0], [69.1, 22781.0], [69.2, 22781.0], [69.3, 22841.0], [69.4, 22841.0], [69.5, 22908.0], [69.6, 22908.0], [69.7, 22994.0], [69.8, 22994.0], [69.9, 23324.0], [70.0, 23324.0], [70.1, 23325.0], [70.2, 23325.0], [70.3, 23407.0], [70.4, 23407.0], [70.5, 23737.0], [70.6, 23737.0], [70.7, 23775.0], [70.8, 23775.0], [70.9, 23797.0], [71.0, 23797.0], [71.1, 23815.0], [71.2, 23815.0], [71.3, 23998.0], [71.4, 23998.0], [71.5, 24144.0], [71.6, 24144.0], [71.7, 24183.0], [71.8, 24183.0], [71.9, 24191.0], [72.0, 24191.0], [72.1, 24268.0], [72.2, 24268.0], [72.3, 24288.0], [72.4, 24288.0], [72.5, 24289.0], [72.6, 24289.0], [72.7, 24319.0], [72.8, 24319.0], [72.9, 24327.0], [73.0, 24327.0], [73.1, 24354.0], [73.2, 24354.0], [73.3, 24517.0], [73.4, 24517.0], [73.5, 24572.0], [73.6, 24572.0], [73.7, 24623.0], [73.8, 24623.0], [73.9, 24714.0], [74.0, 24714.0], [74.1, 24969.0], [74.2, 24969.0], [74.3, 25067.0], [74.4, 25067.0], [74.5, 25181.0], [74.6, 25181.0], [74.7, 25241.0], [74.8, 25241.0], [74.9, 25277.0], [75.0, 25277.0], [75.1, 25293.0], [75.2, 25293.0], [75.3, 25363.0], [75.4, 25363.0], [75.5, 25394.0], [75.6, 25394.0], [75.7, 25400.0], [75.8, 25400.0], [75.9, 25481.0], [76.0, 25481.0], [76.1, 25482.0], [76.2, 25482.0], [76.3, 25580.0], [76.4, 25580.0], [76.5, 25619.0], [76.6, 25619.0], [76.7, 25711.0], [76.8, 25711.0], [76.9, 25711.0], [77.0, 25711.0], [77.1, 25822.0], [77.2, 25822.0], [77.3, 25823.0], [77.4, 25823.0], [77.5, 25866.0], [77.6, 25866.0], [77.7, 25958.0], [77.8, 25958.0], [77.9, 26128.0], [78.0, 26128.0], [78.1, 26130.0], [78.2, 26130.0], [78.3, 26280.0], [78.4, 26280.0], [78.5, 26305.0], [78.6, 26305.0], [78.7, 26558.0], [78.8, 26558.0], [78.9, 26769.0], [79.0, 26769.0], [79.1, 26945.0], [79.2, 26945.0], [79.3, 27041.0], [79.4, 27041.0], [79.5, 27076.0], [79.6, 27076.0], [79.7, 27235.0], [79.8, 27235.0], [79.9, 27374.0], [80.0, 27374.0], [80.1, 27578.0], [80.2, 27578.0], [80.3, 27814.0], [80.4, 27814.0], [80.5, 27942.0], [80.6, 27942.0], [80.7, 28018.0], [80.8, 28018.0], [80.9, 28156.0], [81.0, 28156.0], [81.1, 28247.0], [81.2, 28247.0], [81.3, 28317.0], [81.4, 28317.0], [81.5, 28366.0], [81.6, 28366.0], [81.7, 28570.0], [81.8, 28570.0], [81.9, 28613.0], [82.0, 28613.0], [82.1, 28707.0], [82.2, 28707.0], [82.3, 28708.0], [82.4, 28708.0], [82.5, 28853.0], [82.6, 28853.0], [82.7, 28941.0], [82.8, 28941.0], [82.9, 28956.0], [83.0, 28956.0], [83.1, 29075.0], [83.2, 29075.0], [83.3, 29174.0], [83.4, 29174.0], [83.5, 29237.0], [83.6, 29237.0], [83.7, 29552.0], [83.8, 29552.0], [83.9, 29555.0], [84.0, 29555.0], [84.1, 29791.0], [84.2, 29791.0], [84.3, 29935.0], [84.4, 29935.0], [84.5, 29984.0], [84.6, 29984.0], [84.7, 30460.0], [84.8, 30460.0], [84.9, 30569.0], [85.0, 30569.0], [85.1, 30639.0], [85.2, 30639.0], [85.3, 30687.0], [85.4, 30687.0], [85.5, 30924.0], [85.6, 30924.0], [85.7, 31120.0], [85.8, 31120.0], [85.9, 31296.0], [86.0, 31296.0], [86.1, 31404.0], [86.2, 31404.0], [86.3, 31424.0], [86.4, 31424.0], [86.5, 31427.0], [86.6, 31427.0], [86.7, 31522.0], [86.8, 31522.0], [86.9, 31718.0], [87.0, 31718.0], [87.1, 31788.0], [87.2, 31788.0], [87.3, 31892.0], [87.4, 31892.0], [87.5, 31902.0], [87.6, 31902.0], [87.7, 31946.0], [87.8, 31946.0], [87.9, 32032.0], [88.0, 32032.0], [88.1, 32037.0], [88.2, 32037.0], [88.3, 32220.0], [88.4, 32220.0], [88.5, 32307.0], [88.6, 32307.0], [88.7, 32394.0], [88.8, 32394.0], [88.9, 32395.0], [89.0, 32395.0], [89.1, 32400.0], [89.2, 32400.0], [89.3, 32707.0], [89.4, 32707.0], [89.5, 32757.0], [89.6, 32757.0], [89.7, 32871.0], [89.8, 32871.0], [89.9, 32971.0], [90.0, 32971.0], [90.1, 33010.0], [90.2, 33010.0], [90.3, 33231.0], [90.4, 33231.0], [90.5, 33554.0], [90.6, 33554.0], [90.7, 33602.0], [90.8, 33602.0], [90.9, 33720.0], [91.0, 33720.0], [91.1, 33722.0], [91.2, 33722.0], [91.3, 33804.0], [91.4, 33804.0], [91.5, 33843.0], [91.6, 33843.0], [91.7, 34144.0], [91.8, 34144.0], [91.9, 34186.0], [92.0, 34186.0], [92.1, 34380.0], [92.2, 34380.0], [92.3, 34481.0], [92.4, 34481.0], [92.5, 34602.0], [92.6, 34602.0], [92.7, 34759.0], [92.8, 34759.0], [92.9, 34762.0], [93.0, 34762.0], [93.1, 35033.0], [93.2, 35033.0], [93.3, 35045.0], [93.4, 35045.0], [93.5, 35220.0], [93.6, 35220.0], [93.7, 35731.0], [93.8, 35731.0], [93.9, 36009.0], [94.0, 36009.0], [94.1, 36501.0], [94.2, 36501.0], [94.3, 36588.0], [94.4, 36588.0], [94.5, 36906.0], [94.6, 36906.0], [94.7, 36997.0], [94.8, 36997.0], [94.9, 37708.0], [95.0, 37708.0], [95.1, 38152.0], [95.2, 38152.0], [95.3, 38352.0], [95.4, 38352.0], [95.5, 38783.0], [95.6, 38783.0], [95.7, 38802.0], [95.8, 38802.0], [95.9, 38820.0], [96.0, 38820.0], [96.1, 39073.0], [96.2, 39073.0], [96.3, 39241.0], [96.4, 39241.0], [96.5, 39856.0], [96.6, 39856.0], [96.7, 40618.0], [96.8, 40618.0], [96.9, 40853.0], [97.0, 40853.0], [97.1, 41224.0], [97.2, 41224.0], [97.3, 42181.0], [97.4, 42181.0], [97.5, 42698.0], [97.6, 42698.0], [97.7, 42831.0], [97.8, 42831.0], [97.9, 43677.0], [98.0, 43677.0], [98.1, 44574.0], [98.2, 44574.0], [98.3, 46006.0], [98.4, 46006.0], [98.5, 46447.0], [98.6, 46447.0], [98.7, 46583.0], [98.8, 46583.0], [98.9, 48305.0], [99.0, 48305.0], [99.1, 50158.0], [99.2, 50158.0], [99.3, 50642.0], [99.4, 50642.0], [99.5, 51065.0], [99.6, 51065.0], [99.7, 61576.0], [99.8, 61576.0], [99.9, 64705.0], [100.0, 64705.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 92.0], [0.1, 92.0], [0.2, 94.0], [0.3, 94.0], [0.4, 95.0], [0.5, 96.0], [0.6, 96.0], [0.7, 97.0], [0.8, 97.0], [0.9, 97.0], [1.0, 98.0], [1.1, 99.0], [1.2, 99.0], [1.3, 100.0], [1.4, 100.0], [1.5, 101.0], [1.6, 101.0], [1.7, 101.0], [1.8, 101.0], [1.9, 101.0], [2.0, 102.0], [2.1, 102.0], [2.2, 103.0], [2.3, 103.0], [2.4, 103.0], [2.5, 104.0], [2.6, 104.0], [2.7, 104.0], [2.8, 104.0], [2.9, 105.0], [3.0, 106.0], [3.1, 106.0], [3.2, 106.0], [3.3, 106.0], [3.4, 107.0], [3.5, 107.0], [3.6, 107.0], [3.7, 107.0], [3.8, 107.0], [3.9, 108.0], [4.0, 108.0], [4.1, 108.0], [4.2, 108.0], [4.3, 108.0], [4.4, 109.0], [4.5, 109.0], [4.6, 109.0], [4.7, 110.0], [4.8, 110.0], [4.9, 110.0], [5.0, 110.0], [5.1, 110.0], [5.2, 111.0], [5.3, 111.0], [5.4, 111.0], [5.5, 111.0], [5.6, 111.0], [5.7, 112.0], [5.8, 112.0], [5.9, 112.0], [6.0, 112.0], [6.1, 112.0], [6.2, 112.0], [6.3, 112.0], [6.4, 113.0], [6.5, 113.0], [6.6, 113.0], [6.7, 113.0], [6.8, 114.0], [6.9, 114.0], [7.0, 114.0], [7.1, 114.0], [7.2, 114.0], [7.3, 114.0], [7.4, 114.0], [7.5, 114.0], [7.6, 114.0], [7.7, 114.0], [7.8, 114.0], [7.9, 115.0], [8.0, 115.0], [8.1, 115.0], [8.2, 115.0], [8.3, 116.0], [8.4, 116.0], [8.5, 116.0], [8.6, 116.0], [8.7, 116.0], [8.8, 116.0], [8.9, 116.0], [9.0, 117.0], [9.1, 117.0], [9.2, 117.0], [9.3, 117.0], [9.4, 117.0], [9.5, 118.0], [9.6, 118.0], [9.7, 118.0], [9.8, 119.0], [9.9, 119.0], [10.0, 119.0], [10.1, 119.0], [10.2, 119.0], [10.3, 120.0], [10.4, 121.0], [10.5, 121.0], [10.6, 121.0], [10.7, 121.0], [10.8, 122.0], [10.9, 122.0], [11.0, 122.0], [11.1, 122.0], [11.2, 123.0], [11.3, 124.0], [11.4, 124.0], [11.5, 124.0], [11.6, 124.0], [11.7, 125.0], [11.8, 125.0], [11.9, 125.0], [12.0, 126.0], [12.1, 127.0], [12.2, 127.0], [12.3, 127.0], [12.4, 127.0], [12.5, 127.0], [12.6, 127.0], [12.7, 128.0], [12.8, 128.0], [12.9, 128.0], [13.0, 129.0], [13.1, 129.0], [13.2, 129.0], [13.3, 129.0], [13.4, 129.0], [13.5, 130.0], [13.6, 130.0], [13.7, 130.0], [13.8, 130.0], [13.9, 131.0], [14.0, 131.0], [14.1, 131.0], [14.2, 131.0], [14.3, 132.0], [14.4, 132.0], [14.5, 132.0], [14.6, 132.0], [14.7, 133.0], [14.8, 133.0], [14.9, 133.0], [15.0, 136.0], [15.1, 136.0], [15.2, 136.0], [15.3, 136.0], [15.4, 137.0], [15.5, 137.0], [15.6, 137.0], [15.7, 137.0], [15.8, 138.0], [15.9, 138.0], [16.0, 138.0], [16.1, 138.0], [16.2, 138.0], [16.3, 139.0], [16.4, 140.0], [16.5, 140.0], [16.6, 141.0], [16.7, 141.0], [16.8, 144.0], [16.9, 145.0], [17.0, 145.0], [17.1, 146.0], [17.2, 147.0], [17.3, 147.0], [17.4, 147.0], [17.5, 148.0], [17.6, 150.0], [17.7, 157.0], [17.8, 160.0], [17.9, 161.0], [18.0, 163.0], [18.1, 163.0], [18.2, 165.0], [18.3, 168.0], [18.4, 168.0], [18.5, 168.0], [18.6, 170.0], [18.7, 171.0], [18.8, 172.0], [18.9, 173.0], [19.0, 173.0], [19.1, 173.0], [19.2, 174.0], [19.3, 175.0], [19.4, 176.0], [19.5, 177.0], [19.6, 178.0], [19.7, 178.0], [19.8, 179.0], [19.9, 179.0], [20.0, 179.0], [20.1, 179.0], [20.2, 180.0], [20.3, 180.0], [20.4, 180.0], [20.5, 180.0], [20.6, 180.0], [20.7, 181.0], [20.8, 181.0], [20.9, 182.0], [21.0, 182.0], [21.1, 182.0], [21.2, 182.0], [21.3, 182.0], [21.4, 183.0], [21.5, 183.0], [21.6, 183.0], [21.7, 184.0], [21.8, 184.0], [21.9, 184.0], [22.0, 185.0], [22.1, 185.0], [22.2, 185.0], [22.3, 186.0], [22.4, 186.0], [22.5, 186.0], [22.6, 186.0], [22.7, 187.0], [22.8, 187.0], [22.9, 187.0], [23.0, 188.0], [23.1, 189.0], [23.2, 190.0], [23.3, 190.0], [23.4, 190.0], [23.5, 190.0], [23.6, 191.0], [23.7, 191.0], [23.8, 192.0], [23.9, 192.0], [24.0, 192.0], [24.1, 193.0], [24.2, 193.0], [24.3, 194.0], [24.4, 194.0], [24.5, 194.0], [24.6, 195.0], [24.7, 195.0], [24.8, 196.0], [24.9, 196.0], [25.0, 196.0], [25.1, 197.0], [25.2, 198.0], [25.3, 198.0], [25.4, 199.0], [25.5, 200.0], [25.6, 201.0], [25.7, 201.0], [25.8, 201.0], [25.9, 202.0], [26.0, 202.0], [26.1, 203.0], [26.2, 204.0], [26.3, 204.0], [26.4, 205.0], [26.5, 205.0], [26.6, 206.0], [26.7, 208.0], [26.8, 212.0], [26.9, 213.0], [27.0, 213.0], [27.1, 213.0], [27.2, 214.0], [27.3, 215.0], [27.4, 217.0], [27.5, 218.0], [27.6, 220.0], [27.7, 220.0], [27.8, 221.0], [27.9, 221.0], [28.0, 221.0], [28.1, 224.0], [28.2, 224.0], [28.3, 224.0], [28.4, 224.0], [28.5, 225.0], [28.6, 226.0], [28.7, 227.0], [28.8, 227.0], [28.9, 228.0], [29.0, 229.0], [29.1, 231.0], [29.2, 232.0], [29.3, 235.0], [29.4, 236.0], [29.5, 236.0], [29.6, 237.0], [29.7, 238.0], [29.8, 240.0], [29.9, 241.0], [30.0, 244.0], [30.1, 244.0], [30.2, 245.0], [30.3, 247.0], [30.4, 248.0], [30.5, 251.0], [30.6, 254.0], [30.7, 257.0], [30.8, 261.0], [30.9, 262.0], [31.0, 264.0], [31.1, 269.0], [31.2, 270.0], [31.3, 273.0], [31.4, 276.0], [31.5, 281.0], [31.6, 282.0], [31.7, 282.0], [31.8, 283.0], [31.9, 286.0], [32.0, 286.0], [32.1, 287.0], [32.2, 289.0], [32.3, 290.0], [32.4, 291.0], [32.5, 291.0], [32.6, 292.0], [32.7, 292.0], [32.8, 293.0], [32.9, 294.0], [33.0, 295.0], [33.1, 296.0], [33.2, 296.0], [33.3, 297.0], [33.4, 300.0], [33.5, 302.0], [33.6, 303.0], [33.7, 308.0], [33.8, 308.0], [33.9, 309.0], [34.0, 312.0], [34.1, 312.0], [34.2, 313.0], [34.3, 314.0], [34.4, 316.0], [34.5, 318.0], [34.6, 321.0], [34.7, 322.0], [34.8, 324.0], [34.9, 324.0], [35.0, 325.0], [35.1, 329.0], [35.2, 330.0], [35.3, 331.0], [35.4, 334.0], [35.5, 335.0], [35.6, 336.0], [35.7, 336.0], [35.8, 337.0], [35.9, 337.0], [36.0, 339.0], [36.1, 342.0], [36.2, 343.0], [36.3, 345.0], [36.4, 345.0], [36.5, 346.0], [36.6, 347.0], [36.7, 348.0], [36.8, 349.0], [36.9, 349.0], [37.0, 350.0], [37.1, 352.0], [37.2, 353.0], [37.3, 355.0], [37.4, 356.0], [37.5, 363.0], [37.6, 363.0], [37.7, 366.0], [37.8, 369.0], [37.9, 373.0], [38.0, 373.0], [38.1, 377.0], [38.2, 379.0], [38.3, 381.0], [38.4, 383.0], [38.5, 385.0], [38.6, 387.0], [38.7, 387.0], [38.8, 388.0], [38.9, 389.0], [39.0, 393.0], [39.1, 393.0], [39.2, 395.0], [39.3, 399.0], [39.4, 401.0], [39.5, 407.0], [39.6, 410.0], [39.7, 413.0], [39.8, 414.0], [39.9, 416.0], [40.0, 419.0], [40.1, 420.0], [40.2, 421.0], [40.3, 422.0], [40.4, 422.0], [40.5, 423.0], [40.6, 427.0], [40.7, 429.0], [40.8, 431.0], [40.9, 432.0], [41.0, 433.0], [41.1, 436.0], [41.2, 440.0], [41.3, 446.0], [41.4, 448.0], [41.5, 453.0], [41.6, 454.0], [41.7, 454.0], [41.8, 455.0], [41.9, 457.0], [42.0, 459.0], [42.1, 459.0], [42.2, 465.0], [42.3, 469.0], [42.4, 469.0], [42.5, 471.0], [42.6, 473.0], [42.7, 474.0], [42.8, 477.0], [42.9, 479.0], [43.0, 482.0], [43.1, 488.0], [43.2, 491.0], [43.3, 494.0], [43.4, 495.0], [43.5, 496.0], [43.6, 496.0], [43.7, 500.0], [43.8, 503.0], [43.9, 506.0], [44.0, 507.0], [44.1, 508.0], [44.2, 509.0], [44.3, 512.0], [44.4, 514.0], [44.5, 517.0], [44.6, 542.0], [44.7, 542.0], [44.8, 544.0], [44.9, 546.0], [45.0, 553.0], [45.1, 554.0], [45.2, 557.0], [45.3, 560.0], [45.4, 567.0], [45.5, 567.0], [45.6, 569.0], [45.7, 574.0], [45.8, 581.0], [45.9, 581.0], [46.0, 582.0], [46.1, 589.0], [46.2, 591.0], [46.3, 592.0], [46.4, 602.0], [46.5, 603.0], [46.6, 609.0], [46.7, 610.0], [46.8, 612.0], [46.9, 620.0], [47.0, 623.0], [47.1, 627.0], [47.2, 635.0], [47.3, 657.0], [47.4, 660.0], [47.5, 665.0], [47.6, 668.0], [47.7, 669.0], [47.8, 676.0], [47.9, 679.0], [48.0, 680.0], [48.1, 682.0], [48.2, 684.0], [48.3, 688.0], [48.4, 692.0], [48.5, 697.0], [48.6, 698.0], [48.7, 701.0], [48.8, 708.0], [48.9, 710.0], [49.0, 713.0], [49.1, 715.0], [49.2, 721.0], [49.3, 722.0], [49.4, 729.0], [49.5, 737.0], [49.6, 738.0], [49.7, 743.0], [49.8, 749.0], [49.9, 750.0], [50.0, 750.0], [50.1, 750.0], [50.2, 756.0], [50.3, 773.0], [50.4, 781.0], [50.5, 790.0], [50.6, 793.0], [50.7, 796.0], [50.8, 810.0], [50.9, 819.0], [51.0, 820.0], [51.1, 822.0], [51.2, 823.0], [51.3, 825.0], [51.4, 830.0], [51.5, 835.0], [51.6, 836.0], [51.7, 840.0], [51.8, 841.0], [51.9, 846.0], [52.0, 847.0], [52.1, 848.0], [52.2, 853.0], [52.3, 860.0], [52.4, 863.0], [52.5, 868.0], [52.6, 887.0], [52.7, 895.0], [52.8, 897.0], [52.9, 898.0], [53.0, 902.0], [53.1, 910.0], [53.2, 911.0], [53.3, 915.0], [53.4, 915.0], [53.5, 917.0], [53.6, 936.0], [53.7, 951.0], [53.8, 952.0], [53.9, 983.0], [54.0, 991.0], [54.1, 992.0], [54.2, 997.0], [54.3, 999.0], [54.4, 1000.0], [54.5, 1015.0], [54.6, 1029.0], [54.7, 1029.0], [54.8, 1043.0], [54.9, 1046.0], [55.0, 1050.0], [55.1, 1073.0], [55.2, 1077.0], [55.3, 1088.0], [55.4, 1090.0], [55.5, 1101.0], [55.6, 1103.0], [55.7, 1108.0], [55.8, 1110.0], [55.9, 1110.0], [56.0, 1114.0], [56.1, 1126.0], [56.2, 1126.0], [56.3, 1132.0], [56.4, 1133.0], [56.5, 1142.0], [56.6, 1154.0], [56.7, 1163.0], [56.8, 1165.0], [56.9, 1187.0], [57.0, 1191.0], [57.1, 1198.0], [57.2, 1222.0], [57.3, 1223.0], [57.4, 1244.0], [57.5, 1261.0], [57.6, 1261.0], [57.7, 1268.0], [57.8, 1292.0], [57.9, 1297.0], [58.0, 1302.0], [58.1, 1303.0], [58.2, 1306.0], [58.3, 1307.0], [58.4, 1309.0], [58.5, 1311.0], [58.6, 1315.0], [58.7, 1317.0], [58.8, 1318.0], [58.9, 1318.0], [59.0, 1319.0], [59.1, 1319.0], [59.2, 1323.0], [59.3, 1326.0], [59.4, 1326.0], [59.5, 1326.0], [59.6, 1330.0], [59.7, 1331.0], [59.8, 1342.0], [59.9, 1343.0], [60.0, 1347.0], [60.1, 1348.0], [60.2, 1358.0], [60.3, 1363.0], [60.4, 1369.0], [60.5, 1370.0], [60.6, 1371.0], [60.7, 1372.0], [60.8, 1378.0], [60.9, 1378.0], [61.0, 1379.0], [61.1, 1379.0], [61.2, 1384.0], [61.3, 1385.0], [61.4, 1390.0], [61.5, 1393.0], [61.6, 1404.0], [61.7, 1407.0], [61.8, 1409.0], [61.9, 1409.0], [62.0, 1411.0], [62.1, 1415.0], [62.2, 1420.0], [62.3, 1422.0], [62.4, 1423.0], [62.5, 1435.0], [62.6, 1435.0], [62.7, 1450.0], [62.8, 1459.0], [62.9, 1462.0], [63.0, 1465.0], [63.1, 1468.0], [63.2, 1478.0], [63.3, 1496.0], [63.4, 1499.0], [63.5, 1500.0], [63.6, 1503.0], [63.7, 1504.0], [63.8, 1506.0], [63.9, 1509.0], [64.0, 1509.0], [64.1, 1519.0], [64.2, 1526.0], [64.3, 1527.0], [64.4, 1531.0], [64.5, 1535.0], [64.6, 1544.0], [64.7, 1546.0], [64.8, 1548.0], [64.9, 1550.0], [65.0, 1551.0], [65.1, 1557.0], [65.2, 1565.0], [65.3, 1573.0], [65.4, 1585.0], [65.5, 1604.0], [65.6, 1610.0], [65.7, 1625.0], [65.8, 1626.0], [65.9, 1646.0], [66.0, 1652.0], [66.1, 1655.0], [66.2, 1656.0], [66.3, 1660.0], [66.4, 1665.0], [66.5, 1689.0], [66.6, 1691.0], [66.7, 1697.0], [66.8, 1708.0], [66.9, 1713.0], [67.0, 1722.0], [67.1, 1723.0], [67.2, 1733.0], [67.3, 1736.0], [67.4, 1737.0], [67.5, 1747.0], [67.6, 1750.0], [67.7, 1750.0], [67.8, 1761.0], [67.9, 1763.0], [68.0, 1765.0], [68.1, 1766.0], [68.2, 1770.0], [68.3, 1770.0], [68.4, 1771.0], [68.5, 1800.0], [68.6, 1807.0], [68.7, 1856.0], [68.8, 1878.0], [68.9, 1878.0], [69.0, 1881.0], [69.1, 1913.0], [69.2, 1939.0], [69.3, 1947.0], [69.4, 1974.0], [69.5, 1977.0], [69.6, 2003.0], [69.7, 2007.0], [69.8, 2010.0], [69.9, 2034.0], [70.0, 2050.0], [70.1, 2079.0], [70.2, 2080.0], [70.3, 2083.0], [70.4, 2098.0], [70.5, 2098.0], [70.6, 2143.0], [70.7, 2171.0], [70.8, 2202.0], [70.9, 2214.0], [71.0, 2219.0], [71.1, 2228.0], [71.2, 2241.0], [71.3, 2260.0], [71.4, 2286.0], [71.5, 2289.0], [71.6, 2299.0], [71.7, 2329.0], [71.8, 2340.0], [71.9, 2340.0], [72.0, 2351.0], [72.1, 2371.0], [72.2, 2373.0], [72.3, 2417.0], [72.4, 2423.0], [72.5, 2434.0], [72.6, 2436.0], [72.7, 2443.0], [72.8, 2449.0], [72.9, 2507.0], [73.0, 2536.0], [73.1, 2565.0], [73.2, 2573.0], [73.3, 2574.0], [73.4, 2576.0], [73.5, 2583.0], [73.6, 2583.0], [73.7, 2616.0], [73.8, 2640.0], [73.9, 2668.0], [74.0, 2671.0], [74.1, 2671.0], [74.2, 2674.0], [74.3, 2681.0], [74.4, 2686.0], [74.5, 2729.0], [74.6, 2730.0], [74.7, 2747.0], [74.8, 2774.0], [74.9, 2798.0], [75.0, 2806.0], [75.1, 2840.0], [75.2, 2847.0], [75.3, 2852.0], [75.4, 2863.0], [75.5, 2890.0], [75.6, 2897.0], [75.7, 2919.0], [75.8, 2945.0], [75.9, 2958.0], [76.0, 2969.0], [76.1, 2984.0], [76.2, 3070.0], [76.3, 3082.0], [76.4, 3088.0], [76.5, 3094.0], [76.6, 3121.0], [76.7, 3149.0], [76.8, 3179.0], [76.9, 3201.0], [77.0, 3214.0], [77.1, 3299.0], [77.2, 3336.0], [77.3, 3341.0], [77.4, 3370.0], [77.5, 3410.0], [77.6, 3469.0], [77.7, 3474.0], [77.8, 3535.0], [77.9, 3554.0], [78.0, 3712.0], [78.1, 3780.0], [78.2, 3791.0], [78.3, 3838.0], [78.4, 3872.0], [78.5, 3912.0], [78.6, 3922.0], [78.7, 3927.0], [78.8, 4016.0], [78.9, 4036.0], [79.0, 4068.0], [79.1, 4068.0], [79.2, 4090.0], [79.3, 4091.0], [79.4, 4121.0], [79.5, 4170.0], [79.6, 4173.0], [79.7, 4229.0], [79.8, 4233.0], [79.9, 4277.0], [80.0, 4383.0], [80.1, 4392.0], [80.2, 4477.0], [80.3, 4478.0], [80.4, 4549.0], [80.5, 4554.0], [80.6, 4555.0], [80.7, 4607.0], [80.8, 4684.0], [80.9, 4776.0], [81.0, 4959.0], [81.1, 4967.0], [81.2, 5194.0], [81.3, 5198.0], [81.4, 5202.0], [81.5, 5224.0], [81.6, 5229.0], [81.7, 5235.0], [81.8, 5240.0], [81.9, 5246.0], [82.0, 5423.0], [82.1, 5447.0], [82.2, 5448.0], [82.3, 5830.0], [82.4, 6086.0], [82.5, 6213.0], [82.6, 6286.0], [82.7, 6404.0], [82.8, 6481.0], [82.9, 6514.0], [83.0, 6626.0], [83.1, 6653.0], [83.2, 6674.0], [83.3, 6753.0], [83.4, 6764.0], [83.5, 6811.0], [83.6, 6860.0], [83.7, 6862.0], [83.8, 6935.0], [83.9, 6946.0], [84.0, 7003.0], [84.1, 7112.0], [84.2, 7273.0], [84.3, 7317.0], [84.4, 7407.0], [84.5, 7502.0], [84.6, 7611.0], [84.7, 7667.0], [84.8, 7709.0], [84.9, 7792.0], [85.0, 7892.0], [85.1, 7905.0], [85.2, 7942.0], [85.3, 8061.0], [85.4, 8129.0], [85.5, 8180.0], [85.6, 8409.0], [85.7, 8410.0], [85.8, 8525.0], [85.9, 8527.0], [86.0, 8796.0], [86.1, 8849.0], [86.2, 8942.0], [86.3, 8960.0], [86.4, 8963.0], [86.5, 9103.0], [86.6, 9141.0], [86.7, 9167.0], [86.8, 9178.0], [86.9, 9180.0], [87.0, 9237.0], [87.1, 9242.0], [87.2, 9266.0], [87.3, 9358.0], [87.4, 9469.0], [87.5, 9495.0], [87.6, 9543.0], [87.7, 9553.0], [87.8, 9618.0], [87.9, 9625.0], [88.0, 9948.0], [88.1, 9975.0], [88.2, 10061.0], [88.3, 10122.0], [88.4, 10226.0], [88.5, 10331.0], [88.6, 10338.0], [88.7, 10560.0], [88.8, 10599.0], [88.9, 10694.0], [89.0, 10912.0], [89.1, 11012.0], [89.2, 11257.0], [89.3, 11269.0], [89.4, 11364.0], [89.5, 11418.0], [89.6, 11587.0], [89.7, 11625.0], [89.8, 11849.0], [89.9, 11856.0], [90.0, 11888.0], [90.1, 12274.0], [90.2, 12734.0], [90.3, 12774.0], [90.4, 13196.0], [90.5, 13469.0], [90.6, 13643.0], [90.7, 13717.0], [90.8, 14087.0], [90.9, 14332.0], [91.0, 14436.0], [91.1, 14450.0], [91.2, 14728.0], [91.3, 14774.0], [91.4, 14786.0], [91.5, 14790.0], [91.6, 15006.0], [91.7, 15149.0], [91.8, 15173.0], [91.9, 15792.0], [92.0, 15825.0], [92.1, 15986.0], [92.2, 16359.0], [92.3, 16366.0], [92.4, 16453.0], [92.5, 16548.0], [92.6, 16558.0], [92.7, 16893.0], [92.8, 16948.0], [92.9, 16959.0], [93.0, 17081.0], [93.1, 17102.0], [93.2, 17109.0], [93.3, 17206.0], [93.4, 17268.0], [93.5, 17589.0], [93.6, 17815.0], [93.7, 17873.0], [93.8, 17885.0], [93.9, 18176.0], [94.0, 18312.0], [94.1, 18393.0], [94.2, 19389.0], [94.3, 19469.0], [94.4, 19577.0], [94.5, 19886.0], [94.6, 20090.0], [94.7, 20522.0], [94.8, 21064.0], [94.9, 21368.0], [95.0, 21450.0], [95.1, 21608.0], [95.2, 21939.0], [95.3, 22155.0], [95.4, 22165.0], [95.5, 22268.0], [95.6, 22751.0], [95.7, 23326.0], [95.8, 23405.0], [95.9, 23451.0], [96.0, 23495.0], [96.1, 24013.0], [96.2, 24175.0], [96.3, 24361.0], [96.4, 24738.0], [96.5, 24754.0], [96.6, 25324.0], [96.7, 26588.0], [96.8, 26803.0], [96.9, 27177.0], [97.0, 27632.0], [97.1, 27909.0], [97.2, 28160.0], [97.3, 29005.0], [97.4, 29153.0], [97.5, 29503.0], [97.6, 29614.0], [97.7, 30437.0], [97.8, 30681.0], [97.9, 30907.0], [98.0, 31300.0], [98.1, 31915.0], [98.2, 32032.0], [98.3, 32829.0], [98.4, 32874.0], [98.5, 32911.0], [98.6, 33013.0], [98.7, 33064.0], [98.8, 33393.0], [98.9, 33484.0], [99.0, 33878.0], [99.1, 34972.0], [99.2, 35299.0], [99.3, 35517.0], [99.4, 36423.0], [99.5, 37175.0], [99.6, 41035.0], [99.7, 45373.0], [99.8, 48868.0], [99.9, 60022.0]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/otc_disease/get_by_alias", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 849.0, "series": [{"data": [[0.0, 12.0], [100.0, 849.0], [37300.0, 1.0], [38100.0, 1.0], [38900.0, 1.0], [39700.0, 1.0], [44900.0, 1.0], [48100.0, 1.0], [200.0, 373.0], [300.0, 245.0], [400.0, 151.0], [500.0, 97.0], [600.0, 58.0], [700.0, 45.0], [800.0, 35.0], [900.0, 38.0], [1000.0, 21.0], [1100.0, 31.0], [1200.0, 22.0], [1300.0, 20.0], [1400.0, 15.0], [1500.0, 8.0], [1600.0, 10.0], [1700.0, 10.0], [1800.0, 11.0], [1900.0, 10.0], [2000.0, 7.0], [2100.0, 5.0], [2300.0, 14.0], [2200.0, 10.0], [2400.0, 7.0], [2500.0, 4.0], [2600.0, 6.0], [2700.0, 7.0], [2800.0, 4.0], [2900.0, 10.0], [3000.0, 5.0], [3100.0, 4.0], [3200.0, 6.0], [3300.0, 7.0], [3400.0, 3.0], [3500.0, 2.0], [3700.0, 3.0], [3600.0, 2.0], [3800.0, 4.0], [3900.0, 3.0], [4000.0, 4.0], [4100.0, 7.0], [4200.0, 5.0], [4300.0, 9.0], [4400.0, 1.0], [4500.0, 1.0], [4600.0, 2.0], [4700.0, 3.0], [4800.0, 4.0], [4900.0, 4.0], [5100.0, 2.0], [5000.0, 1.0], [5200.0, 2.0], [5400.0, 5.0], [5500.0, 3.0], [5600.0, 2.0], [5800.0, 3.0], [5700.0, 5.0], [6000.0, 3.0], [5900.0, 3.0], [6100.0, 1.0], [6200.0, 3.0], [6300.0, 5.0], [6500.0, 2.0], [6400.0, 4.0], [6600.0, 1.0], [6700.0, 6.0], [6900.0, 2.0], [6800.0, 1.0], [7000.0, 2.0], [7200.0, 2.0], [7400.0, 1.0], [7300.0, 1.0], [7500.0, 1.0], [7600.0, 6.0], [7700.0, 2.0], [7900.0, 4.0], [8000.0, 4.0], [8100.0, 1.0], [8200.0, 2.0], [8400.0, 2.0], [8300.0, 2.0], [9200.0, 6.0], [8900.0, 4.0], [9100.0, 3.0], [9000.0, 2.0], [8800.0, 1.0], [9700.0, 2.0], [9500.0, 1.0], [9400.0, 1.0], [9600.0, 1.0], [9300.0, 1.0], [10000.0, 2.0], [9800.0, 3.0], [10100.0, 1.0], [9900.0, 2.0], [10200.0, 1.0], [10600.0, 2.0], [10500.0, 3.0], [10400.0, 2.0], [10700.0, 2.0], [11000.0, 3.0], [10800.0, 4.0], [11100.0, 1.0], [11200.0, 1.0], [10900.0, 1.0], [11300.0, 2.0], [11400.0, 1.0], [11700.0, 1.0], [12200.0, 2.0], [12100.0, 2.0], [12000.0, 3.0], [11900.0, 2.0], [12600.0, 2.0], [12700.0, 1.0], [12900.0, 1.0], [13100.0, 1.0], [13000.0, 1.0], [13200.0, 2.0], [13700.0, 3.0], [13500.0, 2.0], [13600.0, 2.0], [13400.0, 2.0], [14200.0, 1.0], [14100.0, 2.0], [13900.0, 1.0], [14800.0, 1.0], [14700.0, 1.0], [14900.0, 1.0], [15300.0, 1.0], [15000.0, 2.0], [15100.0, 1.0], [15800.0, 1.0], [15700.0, 2.0], [15500.0, 1.0], [16100.0, 3.0], [16000.0, 2.0], [16200.0, 1.0], [16300.0, 3.0], [17200.0, 1.0], [17000.0, 1.0], [16400.0, 2.0], [16800.0, 3.0], [17400.0, 1.0], [16600.0, 1.0], [17600.0, 1.0], [18600.0, 2.0], [20800.0, 1.0], [21000.0, 1.0], [21400.0, 1.0], [22400.0, 1.0], [21600.0, 1.0], [23800.0, 1.0], [23600.0, 1.0], [25200.0, 2.0], [24800.0, 2.0], [26400.0, 2.0], [26600.0, 1.0], [27000.0, 1.0], [27600.0, 1.0], [27200.0, 1.0], [29000.0, 2.0], [30000.0, 1.0], [30600.0, 1.0], [29800.0, 1.0], [30200.0, 1.0], [32200.0, 1.0], [33200.0, 1.0], [33600.0, 1.0], [34400.0, 1.0], [35200.0, 1.0], [38400.0, 1.0], [40800.0, 1.0], [36300.0, 1.0], [43900.0, 1.0], [46300.0, 1.0], [47500.0, 1.0], [17100.0, 3.0], [16700.0, 2.0], [16500.0, 1.0], [18500.0, 2.0], [18900.0, 2.0], [19300.0, 1.0], [18700.0, 1.0], [19100.0, 1.0], [19500.0, 2.0], [19900.0, 1.0], [20100.0, 1.0], [19700.0, 1.0], [21900.0, 2.0], [22500.0, 1.0], [22700.0, 2.0], [22900.0, 2.0], [24500.0, 1.0], [24100.0, 1.0], [24300.0, 1.0], [25100.0, 1.0], [25300.0, 1.0], [24900.0, 1.0], [26900.0, 1.0], [27300.0, 2.0], [27100.0, 1.0], [27700.0, 1.0], [29500.0, 1.0], [29300.0, 1.0], [31300.0, 1.0], [31900.0, 2.0], [32100.0, 1.0], [33000.0, 1.0], [34600.0, 1.0], [36600.0, 1.0], [38600.0, 1.0]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/medicines/get_med_by_dis_alias_w_pag", "isController": false}, {"data": [[32900.0, 1.0], [34100.0, 2.0], [33700.0, 2.0], [35700.0, 1.0], [36500.0, 2.0], [36900.0, 2.0], [37700.0, 1.0], [38100.0, 1.0], [42100.0, 1.0], [44500.0, 1.0], [46500.0, 1.0], [50100.0, 1.0], [1800.0, 1.0], [2300.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2700.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 1.0], [3400.0, 2.0], [3500.0, 3.0], [3700.0, 3.0], [3600.0, 2.0], [3900.0, 2.0], [4000.0, 2.0], [4300.0, 2.0], [4100.0, 2.0], [4600.0, 2.0], [4700.0, 1.0], [5100.0, 3.0], [4900.0, 1.0], [5200.0, 2.0], [5600.0, 3.0], [5500.0, 2.0], [5400.0, 1.0], [5800.0, 1.0], [5900.0, 1.0], [6000.0, 1.0], [6300.0, 1.0], [6200.0, 1.0], [6400.0, 2.0], [6600.0, 2.0], [6500.0, 1.0], [6800.0, 3.0], [6900.0, 1.0], [7000.0, 2.0], [7100.0, 2.0], [7300.0, 1.0], [7200.0, 2.0], [7500.0, 2.0], [7600.0, 1.0], [7800.0, 3.0], [8100.0, 1.0], [8700.0, 2.0], [8400.0, 1.0], [8200.0, 3.0], [8300.0, 3.0], [8500.0, 2.0], [8600.0, 2.0], [8800.0, 4.0], [9200.0, 3.0], [9100.0, 2.0], [9000.0, 1.0], [9400.0, 2.0], [9300.0, 1.0], [9700.0, 3.0], [9500.0, 2.0], [10100.0, 1.0], [9800.0, 1.0], [10000.0, 2.0], [9900.0, 1.0], [10200.0, 2.0], [10600.0, 3.0], [10300.0, 3.0], [10400.0, 3.0], [11200.0, 1.0], [10800.0, 5.0], [10900.0, 5.0], [11100.0, 2.0], [11400.0, 3.0], [11700.0, 1.0], [11900.0, 2.0], [12200.0, 2.0], [11800.0, 3.0], [12100.0, 1.0], [12400.0, 2.0], [12600.0, 1.0], [12300.0, 3.0], [12500.0, 1.0], [13300.0, 3.0], [12900.0, 2.0], [13200.0, 2.0], [13000.0, 3.0], [12800.0, 3.0], [13100.0, 2.0], [13600.0, 3.0], [13500.0, 2.0], [13400.0, 1.0], [13800.0, 1.0], [13700.0, 4.0], [14100.0, 3.0], [14000.0, 1.0], [13900.0, 2.0], [14300.0, 1.0], [14200.0, 1.0], [14800.0, 3.0], [14500.0, 1.0], [14600.0, 3.0], [14700.0, 1.0], [14400.0, 1.0], [14900.0, 5.0], [15100.0, 2.0], [15300.0, 3.0], [15000.0, 2.0], [15200.0, 3.0], [15700.0, 3.0], [15600.0, 4.0], [15500.0, 1.0], [15800.0, 2.0], [15400.0, 1.0], [16100.0, 5.0], [16300.0, 2.0], [16000.0, 2.0], [16200.0, 2.0], [15900.0, 1.0], [17000.0, 2.0], [17400.0, 4.0], [17200.0, 2.0], [16600.0, 3.0], [16400.0, 1.0], [18400.0, 2.0], [17800.0, 2.0], [18200.0, 1.0], [17600.0, 1.0], [19200.0, 3.0], [18800.0, 2.0], [19400.0, 1.0], [19000.0, 4.0], [18600.0, 3.0], [20400.0, 1.0], [19600.0, 2.0], [20000.0, 2.0], [20200.0, 1.0], [21000.0, 4.0], [21200.0, 1.0], [21400.0, 6.0], [20800.0, 1.0], [22200.0, 3.0], [21800.0, 2.0], [22000.0, 1.0], [21600.0, 1.0], [22400.0, 1.0], [23400.0, 1.0], [22800.0, 1.0], [24200.0, 3.0], [23800.0, 1.0], [25200.0, 3.0], [25400.0, 3.0], [24600.0, 1.0], [25000.0, 1.0], [25800.0, 3.0], [26200.0, 1.0], [25600.0, 1.0], [27000.0, 2.0], [27200.0, 1.0], [28200.0, 1.0], [27800.0, 1.0], [28000.0, 1.0], [28600.0, 1.0], [28800.0, 1.0], [29000.0, 1.0], [29200.0, 1.0], [30600.0, 2.0], [30400.0, 1.0], [31200.0, 1.0], [31400.0, 3.0], [32000.0, 2.0], [32400.0, 1.0], [32200.0, 1.0], [31800.0, 1.0], [33200.0, 1.0], [32800.0, 1.0], [33600.0, 1.0], [34400.0, 1.0], [36000.0, 1.0], [35200.0, 1.0], [38800.0, 2.0], [39200.0, 1.0], [40800.0, 1.0], [41200.0, 1.0], [42800.0, 1.0], [43600.0, 1.0], [46000.0, 1.0], [46400.0, 1.0], [33500.0, 1.0], [34700.0, 2.0], [34300.0, 1.0], [38700.0, 1.0], [38300.0, 1.0], [48300.0, 1.0], [61500.0, 1.0], [64700.0, 1.0], [17300.0, 1.0], [16900.0, 3.0], [16500.0, 1.0], [16700.0, 2.0], [18300.0, 4.0], [17900.0, 3.0], [18100.0, 3.0], [17500.0, 1.0], [17700.0, 2.0], [18900.0, 7.0], [19300.0, 4.0], [18700.0, 1.0], [19100.0, 1.0], [18500.0, 2.0], [19900.0, 2.0], [20100.0, 3.0], [19500.0, 2.0], [19700.0, 2.0], [20300.0, 2.0], [21500.0, 1.0], [20900.0, 1.0], [20500.0, 1.0], [20700.0, 1.0], [21100.0, 1.0], [21700.0, 4.0], [21900.0, 1.0], [22300.0, 1.0], [22900.0, 2.0], [22700.0, 1.0], [23300.0, 2.0], [24500.0, 2.0], [24100.0, 3.0], [23900.0, 1.0], [24300.0, 3.0], [23700.0, 3.0], [25100.0, 1.0], [25300.0, 2.0], [25500.0, 1.0], [24700.0, 1.0], [24900.0, 1.0], [25900.0, 1.0], [26500.0, 1.0], [26100.0, 2.0], [25700.0, 2.0], [26300.0, 1.0], [26700.0, 1.0], [26900.0, 1.0], [27500.0, 1.0], [27300.0, 1.0], [28300.0, 2.0], [28100.0, 1.0], [28500.0, 1.0], [27900.0, 1.0], [28900.0, 2.0], [29500.0, 2.0], [29100.0, 1.0], [28700.0, 2.0], [29700.0, 1.0], [29900.0, 2.0], [30500.0, 1.0], [30900.0, 1.0], [31100.0, 1.0], [31700.0, 2.0], [31500.0, 1.0], [31900.0, 2.0], [32300.0, 3.0], [32700.0, 2.0], [33800.0, 2.0], [34600.0, 1.0], [33000.0, 1.0], [35000.0, 2.0], [40600.0, 1.0], [39000.0, 1.0], [39800.0, 1.0], [42600.0, 1.0], [50600.0, 1.0], [51000.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 12.0], [100.0, 242.0], [32900.0, 1.0], [33300.0, 1.0], [34900.0, 1.0], [35500.0, 1.0], [37100.0, 1.0], [45300.0, 1.0], [200.0, 79.0], [300.0, 60.0], [400.0, 43.0], [500.0, 27.0], [600.0, 23.0], [700.0, 21.0], [800.0, 22.0], [900.0, 14.0], [1000.0, 11.0], [1100.0, 17.0], [1200.0, 8.0], [1300.0, 36.0], [1400.0, 19.0], [1500.0, 20.0], [1600.0, 13.0], [1700.0, 17.0], [1800.0, 6.0], [1900.0, 5.0], [2000.0, 10.0], [2100.0, 2.0], [2200.0, 9.0], [2300.0, 6.0], [2400.0, 6.0], [2500.0, 8.0], [2600.0, 8.0], [2700.0, 6.0], [2800.0, 7.0], [2900.0, 5.0], [3000.0, 4.0], [3100.0, 3.0], [3200.0, 3.0], [3300.0, 3.0], [3400.0, 3.0], [3500.0, 2.0], [3700.0, 3.0], [3800.0, 2.0], [3900.0, 3.0], [4000.0, 6.0], [4200.0, 3.0], [4300.0, 2.0], [4100.0, 3.0], [4600.0, 2.0], [4500.0, 3.0], [4400.0, 2.0], [4700.0, 1.0], [4900.0, 2.0], [5100.0, 2.0], [5200.0, 6.0], [5400.0, 3.0], [5800.0, 1.0], [6000.0, 1.0], [6200.0, 2.0], [6400.0, 2.0], [6600.0, 3.0], [6500.0, 1.0], [6900.0, 2.0], [6700.0, 2.0], [6800.0, 3.0], [7100.0, 1.0], [7000.0, 1.0], [7400.0, 1.0], [7200.0, 1.0], [7300.0, 1.0], [7600.0, 2.0], [7500.0, 1.0], [7700.0, 2.0], [7900.0, 2.0], [7800.0, 1.0], [8100.0, 2.0], [8000.0, 1.0], [8400.0, 2.0], [8700.0, 1.0], [8500.0, 2.0], [9100.0, 5.0], [9200.0, 3.0], [8900.0, 3.0], [8800.0, 1.0], [9500.0, 2.0], [9400.0, 2.0], [9300.0, 1.0], [9600.0, 2.0], [10000.0, 1.0], [9900.0, 2.0], [10100.0, 1.0], [10200.0, 1.0], [10300.0, 2.0], [10500.0, 2.0], [10600.0, 1.0], [11000.0, 1.0], [11200.0, 2.0], [10900.0, 1.0], [11600.0, 1.0], [11400.0, 1.0], [11500.0, 1.0], [11300.0, 1.0], [11800.0, 3.0], [12200.0, 1.0], [12700.0, 2.0], [13100.0, 1.0], [13600.0, 1.0], [13400.0, 1.0], [13700.0, 1.0], [14300.0, 1.0], [14000.0, 1.0], [14400.0, 2.0], [14700.0, 4.0], [15000.0, 1.0], [15100.0, 2.0], [15700.0, 1.0], [15800.0, 1.0], [15900.0, 1.0], [16300.0, 2.0], [17000.0, 1.0], [17100.0, 2.0], [17200.0, 2.0], [16900.0, 2.0], [16500.0, 2.0], [16400.0, 1.0], [16800.0, 1.0], [18300.0, 2.0], [17800.0, 3.0], [17500.0, 1.0], [18100.0, 1.0], [19400.0, 1.0], [19300.0, 1.0], [19500.0, 1.0], [20000.0, 1.0], [19800.0, 1.0], [21000.0, 1.0], [20500.0, 1.0], [21400.0, 1.0], [21300.0, 1.0], [21900.0, 1.0], [22200.0, 1.0], [22100.0, 2.0], [21600.0, 1.0], [23400.0, 3.0], [22700.0, 1.0], [23300.0, 1.0], [24300.0, 1.0], [24100.0, 1.0], [24000.0, 1.0], [25300.0, 1.0], [24700.0, 2.0], [26500.0, 1.0], [27100.0, 1.0], [26800.0, 1.0], [27600.0, 1.0], [28100.0, 1.0], [27900.0, 1.0], [29600.0, 1.0], [29100.0, 1.0], [29500.0, 1.0], [29000.0, 1.0], [30400.0, 1.0], [30600.0, 1.0], [31300.0, 1.0], [30900.0, 1.0], [32000.0, 1.0], [31900.0, 1.0], [32800.0, 2.0], [33000.0, 2.0], [33400.0, 1.0], [33800.0, 1.0], [35200.0, 1.0], [36400.0, 1.0], [41000.0, 1.0], [48800.0, 1.0], [60000.0, 1.0]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/otc_disease/get_by_alias", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 64700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2069.0, "series": [{"data": [[0.0, 2069.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 578.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 846.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 7.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 62.04930662557778, "minX": 1.66159752E12, "maxY": 223.67616580310883, "series": [{"data": [[1.66159776E12, 110.15458937198068], [1.66159758E12, 62.04930662557778], [1.6615977E12, 223.67616580310883], [1.66159752E12, 124.98212407991569]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66159776E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 100.0, "minX": 1.0, "maxY": 48968.0, "series": [{"data": [[2.0, 2625.769230769232], [3.0, 6024.6], [4.0, 12030.25], [5.0, 8666.5], [6.0, 9337.0], [7.0, 8998.125000000002], [8.0, 9365.857142857143], [9.0, 10039.0], [10.0, 169.8], [11.0, 129.42857142857142], [12.0, 7396.315789473683], [13.0, 3090.875], [14.0, 9213.57142857143], [15.0, 166.25], [16.0, 200.14285714285714], [17.0, 8695.333333333334], [18.0, 3608.875], [19.0, 3099.75], [20.0, 7402.2], [21.0, 1414.4166666666667], [22.0, 8737.5], [23.0, 176.72727272727272], [24.0, 2714.6666666666665], [25.0, 145.0], [26.0, 3581.0000000000005], [27.0, 18141.5], [28.0, 4654.0], [29.0, 124.14285714285714], [30.0, 3132.777777777778], [31.0, 3328.4], [32.0, 2265.714285714286], [33.0, 136.66666666666666], [34.0, 3660.6666666666665], [35.0, 5702.5], [37.0, 1929.8], [36.0, 1874.8333333333335], [39.0, 157.2], [38.0, 1368.7272727272725], [41.0, 1060.5238095238096], [40.0, 136.0], [42.0, 2672.727272727273], [43.0, 3673.1111111111113], [44.0, 225.0], [45.0, 2004.2222222222222], [46.0, 288.57142857142856], [47.0, 4908.789473684211], [48.0, 2790.0], [49.0, 3325.555555555555], [51.0, 187.6], [50.0, 138.33333333333334], [53.0, 1803.2307692307693], [52.0, 3304.2857142857147], [54.0, 219.3], [55.0, 413.38461538461536], [57.0, 3399.8], [56.0, 1528.7142857142858], [59.0, 3875.3999999999996], [58.0, 185.0], [60.0, 210.6], [61.0, 362.8], [62.0, 4548.0], [63.0, 2174.2], [64.0, 6561.599999999999], [65.0, 5253.230769230769], [67.0, 274.3125000000001], [66.0, 251.28571428571428], [68.0, 329.83333333333337], [69.0, 437.83333333333337], [70.0, 2403.7], [71.0, 3540.0], [72.0, 1718.1818181818182], [74.0, 5086.173913043478], [75.0, 1966.375], [73.0, 251.0], [78.0, 185.0], [79.0, 2262.4166666666665], [77.0, 285.64705882352945], [76.0, 139.0], [80.0, 694.5], [82.0, 358.5], [83.0, 443.0], [81.0, 386.33333333333337], [84.0, 2262.6000000000004], [85.0, 308.5714285714286], [87.0, 554.5555555555555], [86.0, 271.0], [89.0, 2970.8], [90.0, 2644.5], [91.0, 3290.7692307692314], [88.0, 3832.9999999999995], [92.0, 5507.333333333334], [93.0, 209.9], [94.0, 3047.6666666666665], [95.0, 1738.3333333333333], [96.0, 3114.8333333333335], [98.0, 3374.727272727273], [99.0, 4520.888888888889], [97.0, 1690.4705882352935], [100.0, 1955.8000000000002], [102.0, 429.8125], [101.0, 5561.833333333333], [103.0, 320.6666666666667], [104.0, 1115.8333333333333], [105.0, 533.9999999999999], [106.0, 351.3333333333333], [107.0, 356.6], [108.0, 311.8888888888889], [110.0, 765.1666666666666], [111.0, 2285.3636363636365], [109.0, 3458.0], [114.0, 2385.0], [115.0, 1467.7333333333331], [113.0, 1302.3076923076926], [112.0, 1744.8333333333335], [116.0, 3143.391304347825], [117.0, 342.75], [119.0, 2658.0], [118.0, 4113.333333333335], [120.0, 2811.6111111111113], [122.0, 879.5], [123.0, 3302.249999999999], [121.0, 444.99999999999994], [125.0, 1099.642857142857], [126.0, 1552.6923076923076], [127.0, 1767.5], [124.0, 316.3333333333333], [128.0, 1317.0], [133.0, 694.4285714285714], [134.0, 639.4285714285714], [135.0, 519.7500000000001], [132.0, 3601.230769230769], [131.0, 828.2222222222223], [130.0, 1560.8666666666668], [129.0, 2452.0], [136.0, 1097.8666666666666], [137.0, 2331.666666666667], [140.0, 568.5454545454546], [141.0, 215.66666666666666], [143.0, 764.6666666666666], [142.0, 2208.8571428571427], [139.0, 1361.142857142857], [138.0, 987.1111111111111], [145.0, 3068.0], [147.0, 795.5555555555555], [151.0, 3730.9999999999995], [150.0, 802.8571428571428], [149.0, 897.2857142857143], [148.0, 1654.8999999999999], [146.0, 593.25], [144.0, 2987.25], [152.0, 847.8], [153.0, 996.8333333333333], [155.0, 479.2], [156.0, 5611.454545454546], [157.0, 667.3846153846154], [158.0, 1253.2], [159.0, 2788.9999999999995], [154.0, 1152.5333333333333], [161.0, 543.0], [163.0, 1079.1818181818185], [164.0, 1255.7142857142858], [165.0, 842.2857142857143], [167.0, 3153.2999999999997], [166.0, 2229.5], [162.0, 1275.2222222222222], [160.0, 1631.0], [168.0, 1347.3684210526317], [169.0, 835.6875000000001], [170.0, 1223.3333333333333], [171.0, 873.0645161290322], [173.0, 321.14285714285717], [175.0, 244.29999999999998], [174.0, 3466.0666666666666], [172.0, 663.5555555555555], [176.0, 1382.6], [177.0, 499.13333333333327], [178.0, 2896.0], [181.0, 2202.5], [183.0, 10466.5], [182.0, 1053.0], [180.0, 113.0], [179.0, 228.0], [184.0, 1192.3333333333333], [185.0, 916.4285714285713], [191.0, 129.0], [190.0, 1872.3000000000002], [189.0, 3329.75], [188.0, 147.5], [187.0, 2748.8], [186.0, 5119.333333333334], [192.0, 913.8], [195.0, 549.6666666666666], [197.0, 2443.0], [199.0, 305.0], [198.0, 141.5], [196.0, 4706.666666666666], [194.0, 1806.25], [193.0, 123.0], [202.0, 3985.9], [204.0, 2895.833333333333], [207.0, 946.6], [205.0, 3923.666666666667], [203.0, 322.0], [201.0, 6233.5], [200.0, 122.0], [213.0, 2443.888888888889], [215.0, 192.0], [214.0, 3401.2500000000005], [212.0, 262.3333333333333], [211.0, 131.0], [210.0, 2859.818181818182], [209.0, 248.0], [208.0, 3981.0], [219.0, 2705.714285714286], [221.0, 847.5714285714284], [222.0, 2110.2], [223.0, 4689.0], [220.0, 5937.2], [218.0, 3464.8888888888887], [217.0, 2734.222222222222], [216.0, 395.0], [224.0, 3407.0], [225.0, 2887.4], [231.0, 788.5], [230.0, 139.0], [229.0, 650.0], [228.0, 257.5], [227.0, 2017.4444444444443], [226.0, 3644.7499999999995], [232.0, 2107.1], [234.0, 3016.9999999999995], [233.0, 329.4], [239.0, 2204.833333333333], [238.0, 188.0], [237.0, 111.0], [236.0, 3466.3333333333335], [235.0, 2606.0], [240.0, 3232.9999999999995], [242.0, 3328.6666666666665], [241.0, 4110.666666666667], [243.0, 2261.0], [246.0, 2779.1111111111113], [247.0, 2453.666666666667], [245.0, 124.0], [244.0, 3404.4], [249.0, 539.75], [250.0, 1896.9999999999998], [255.0, 2551.8], [254.0, 695.2941176470588], [253.0, 120.0], [252.0, 225.0], [251.0, 3230.5000000000005], [248.0, 4133.333333333332], [270.0, 412.5], [259.0, 1324.5], [260.0, 1367.5], [261.0, 1950.3333333333335], [263.0, 404.14285714285717], [256.0, 2518.6666666666665], [258.0, 248.5], [257.0, 254.0], [262.0, 2691.142857142857], [264.0, 2720.0], [267.0, 2224.8571428571427], [271.0, 1099.6249999999998], [269.0, 3849.8571428571427], [268.0, 2002.6875000000002], [266.0, 113.0], [265.0, 840.6666666666667], [287.0, 1674.857142857143], [278.0, 794.375], [277.0, 120.0], [276.0, 4170.25], [279.0, 1604.1666666666667], [280.0, 3264.8333333333335], [281.0, 1824.545454545454], [282.0, 2072.4375000000005], [283.0, 1936.9285714285716], [286.0, 2435.416666666667], [285.0, 108.0], [284.0, 385.0], [275.0, 2858.0909090909095], [274.0, 1928.0], [273.0, 1052.0], [272.0, 1066.1000000000001], [289.0, 488.0], [290.0, 1633.3055555555552], [293.0, 271.0], [292.0, 1224.1379310344828], [291.0, 1101.6666666666667], [288.0, 1680.5454545454547], [1.0, 203.0]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/medicines/get_med_by_dis_alias_w_pag", "isController": false}, {"data": [[137.15519999999975, 2261.725599999999]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/medicines/get_med_by_dis_alias_w_pag-Aggregated", "isController": false}, {"data": [[2.0, 47690.0], [3.0, 39855.0], [4.0, 38273.0], [5.0, 41294.0], [6.0, 39496.0], [7.0, 37761.0], [8.0, 36309.0], [9.0, 34869.5], [10.0, 36713.5], [11.0, 33162.5], [12.0, 37415.0], [13.0, 33701.5], [14.0, 35744.0], [15.0, 29106.0], [16.0, 29518.0], [17.0, 30914.5], [18.0, 30990.5], [19.0, 32055.0], [20.0, 25851.0], [21.0, 29705.0], [22.0, 26704.0], [23.0, 29744.0], [24.0, 29454.5], [25.0, 29831.0], [26.0, 29341.0], [27.0, 31501.5], [28.0, 28131.0], [29.0, 24960.5], [30.0, 24656.5], [31.0, 28129.0], [33.0, 26063.0], [32.0, 29486.5], [35.0, 27064.5], [34.0, 26021.0], [37.0, 27323.0], [36.0, 24624.5], [39.0, 24815.5], [38.0, 24206.5], [41.0, 25593.5], [40.0, 22700.5], [43.0, 20885.0], [42.0, 25771.5], [45.0, 26176.0], [44.0, 25342.0], [47.0, 29379.0], [46.0, 25183.5], [49.0, 26599.5], [48.0, 26781.0], [51.0, 27950.0], [50.0, 23212.0], [53.0, 23937.0], [52.0, 28092.5], [55.0, 14742.666666666668], [54.0, 21476.0], [57.0, 15348.666666666668], [56.0, 23151.5], [59.0, 27958.5], [58.0, 21666.0], [61.0, 24476.5], [60.0, 20818.5], [63.0, 25010.0], [62.0, 25991.0], [67.0, 21866.5], [66.0, 22573.5], [65.0, 25263.5], [64.0, 23020.0], [70.0, 15603.666666666668], [69.0, 14090.0], [71.0, 22954.5], [68.0, 20532.0], [72.0, 12659.0], [75.0, 19676.5], [74.0, 24205.0], [73.0, 22384.5], [79.0, 19679.0], [78.0, 23987.0], [77.0, 19231.0], [76.0, 20728.0], [83.0, 19819.333333333332], [81.0, 20446.0], [80.0, 25165.5], [82.0, 24354.0], [85.0, 14858.333333333332], [87.0, 18947.5], [86.0, 21188.0], [84.0, 20159.5], [91.0, 22176.0], [90.0, 22013.5], [89.0, 20877.5], [88.0, 20492.0], [93.0, 14714.75], [95.0, 16487.0], [94.0, 20540.5], [92.0, 25394.0], [98.0, 12285.0], [99.0, 19419.0], [97.0, 22110.5], [96.0, 23216.0], [102.0, 12169.333333333332], [101.0, 17542.5], [100.0, 21992.0], [103.0, 24319.0], [105.0, 14088.333333333332], [107.0, 15551.0], [106.0, 17287.5], [104.0, 15431.333333333332], [108.0, 10627.75], [111.0, 12480.2], [109.0, 20240.0], [110.0, 29791.0], [115.0, 17203.0], [114.0, 19303.5], [113.0, 15784.0], [112.0, 18668.5], [116.0, 12771.0], [119.0, 15630.0], [118.0, 17822.0], [117.0, 17849.0], [123.0, 14548.0], [122.0, 19691.5], [121.0, 16518.0], [120.0, 14906.0], [127.0, 15530.5], [126.0, 16275.5], [125.0, 16603.5], [124.0, 14226.5], [135.0, 13764.5], [134.0, 17385.666666666668], [133.0, 10375.0], [132.0, 16694.5], [131.0, 16354.5], [130.0, 15525.0], [129.0, 18590.5], [128.0, 18140.5], [140.0, 9404.75], [143.0, 13851.5], [142.0, 18620.0], [141.0, 17492.5], [139.0, 17359.5], [138.0, 16295.5], [137.0, 12900.0], [136.0, 13601.5], [151.0, 16058.5], [150.0, 16000.5], [149.0, 17625.0], [148.0, 12564.5], [147.0, 16181.0], [146.0, 14409.0], [145.0, 13611.5], [144.0, 15145.5], [159.0, 14034.0], [158.0, 12748.0], [157.0, 15871.5], [156.0, 15592.0], [155.0, 12207.666666666668], [154.0, 13612.0], [153.0, 12278.5], [152.0, 13360.5], [164.0, 9694.0], [167.0, 17016.666666666668], [166.0, 8799.0], [165.0, 11701.666666666668], [163.0, 13510.0], [162.0, 13026.0], [161.0, 16311.5], [160.0, 16760.0], [169.0, 12869.333333333334], [170.0, 10353.666666666668], [175.0, 14434.0], [174.0, 8885.666666666668], [173.0, 14460.0], [172.0, 12541.5], [171.0, 14132.0], [168.0, 11854.5], [176.0, 11932.666666666668], [178.0, 16246.0], [177.0, 15291.5], [183.0, 22781.0], [182.0, 22994.0], [181.0, 24183.0], [180.0, 15232.0], [179.0, 17435.0], [191.0, 18395.0], [190.0, 15886.0], [189.0, 17695.0], [188.0, 15406.0], [187.0, 15383.0], [186.0, 15212.0], [185.0, 15829.0], [184.0, 15044.0], [199.0, 18537.0], [198.0, 16158.0], [197.0, 21211.0], [196.0, 18228.0], [195.0, 18802.0], [194.0, 17203.0], [193.0, 18936.0], [192.0, 15398.0], [202.0, 12861.0], [207.0, 21586.5], [205.0, 15692.0], [204.0, 19218.0], [203.0, 19305.0], [201.0, 20162.0], [200.0, 14101.0], [215.0, 18959.0], [214.0, 18448.0], [213.0, 18513.0], [212.0, 19522.0], [211.0, 15556.0], [210.0, 15961.0], [209.0, 20190.0], [208.0, 15237.0], [223.0, 16798.0], [222.0, 20790.0], [221.0, 13789.0], [220.0, 17018.0], [219.0, 15191.0], [218.0, 14632.0], [217.0, 14175.0], [216.0, 14241.0], [231.0, 16021.0], [230.0, 14804.0], [229.0, 16654.0], [228.0, 15075.0], [227.0, 12929.0], [226.0, 17728.0], [225.0, 12209.0], [224.0, 13901.0], [234.0, 11116.5], [239.0, 17753.0], [238.0, 10374.0], [237.0, 16429.0], [236.0, 18944.0], [235.0, 18626.0], [233.0, 15728.0], [232.0, 15754.0], [242.0, 9210.5], [247.0, 16127.0], [246.0, 18960.0], [245.0, 14995.0], [244.0, 11878.0], [243.0, 13354.0], [241.0, 17835.0], [240.0, 15357.0], [255.0, 17564.0], [254.0, 10970.0], [253.0, 13758.0], [252.0, 8557.0], [251.0, 10292.0], [250.0, 16662.0], [249.0, 13110.0], [248.0, 9501.0], [270.0, 14923.0], [271.0, 14323.0], [269.0, 12110.0], [268.0, 10257.0], [267.0, 16143.0], [266.0, 13676.0], [265.0, 7157.0], [264.0, 14871.0], [263.0, 14935.0], [257.0, 10607.0], [256.0, 8897.0], [259.0, 12311.0], [258.0, 12530.0], [262.0, 9714.0], [261.0, 12803.0], [260.0, 15605.0], [286.0, 3912.0], [287.0, 3772.0], [285.0, 10975.0], [284.0, 10893.0], [283.0, 4361.0], [282.0, 8317.0], [281.0, 13105.0], [280.0, 10954.0], [279.0, 10059.0], [273.0, 11728.0], [272.0, 6655.0], [275.0, 6244.0], [274.0, 6557.0], [278.0, 9923.0], [277.0, 5600.0], [276.0, 5600.0], [293.0, 9199.0], [292.0, 7145.0], [291.0, 3924.0], [290.0, 5585.0], [289.0, 4103.0], [288.0, 7874.0], [1.0, 48968.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[125.45200000000007, 18917.09599999999]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 30330.666666666668], [3.0, 24556.0], [8.0, 161.0], [9.0, 45373.0], [12.0, 172.0], [13.0, 17643.0], [18.0, 100.0], [19.0, 15465.666666666668], [20.0, 254.0], [21.0, 24266.666666666668], [24.0, 16750.0], [25.0, 9033.25], [26.0, 1492.8999999999999], [27.0, 235.0], [28.0, 18192.666666666664], [29.0, 150.75], [30.0, 183.85714285714283], [31.0, 226.6], [32.0, 8378.25], [33.0, 218.0], [34.0, 13374.2], [36.0, 269.0], [37.0, 286.0], [38.0, 240.0], [40.0, 193.0], [41.0, 6742.0], [43.0, 10400.333333333332], [42.0, 179.0], [44.0, 10860.333333333334], [45.0, 4739.588235294117], [46.0, 5573.636363636364], [47.0, 1650.4999999999998], [48.0, 4141.2], [49.0, 821.3684210526316], [50.0, 310.0], [53.0, 448.3333333333333], [52.0, 25047.0], [55.0, 354.0], [56.0, 127.0], [57.0, 27909.0], [60.0, 612.0], [61.0, 848.0], [62.0, 1660.0], [63.0, 9434.833333333332], [64.0, 5486.142857142857], [65.0, 12276.875], [66.0, 469.0], [67.0, 433.5], [69.0, 424.0], [70.0, 10641.5], [68.0, 7560.5], [71.0, 2527.8], [72.0, 3645.25], [73.0, 138.0], [74.0, 427.0], [75.0, 1175.3333333333333], [76.0, 1697.0], [79.0, 7621.285714285714], [78.0, 231.66666666666666], [77.0, 8001.714285714286], [80.0, 2953.0], [81.0, 2220.25], [82.0, 1278.5], [83.0, 5397.0], [84.0, 1103.0], [85.0, 689.5], [87.0, 736.3333333333334], [86.0, 507.5], [88.0, 951.0], [89.0, 310.5], [91.0, 7288.0], [90.0, 1381.0], [95.0, 1619.0], [94.0, 4166.5], [92.0, 120.0], [93.0, 26803.0], [96.0, 1197.0], [97.0, 981.5], [98.0, 1391.0], [99.0, 4849.285714285715], [101.0, 557.5], [102.0, 7024.2], [103.0, 496.0], [100.0, 790.5], [104.0, 4357.428571428571], [105.0, 618.5], [106.0, 2151.0], [107.0, 1118.0], [108.0, 3523.9], [109.0, 536.0], [110.0, 299.0], [111.0, 312.0], [112.0, 617.3333333333333], [115.0, 5246.5], [114.0, 7052.666666666667], [116.0, 679.25], [117.0, 3335.8], [119.0, 4031.4], [118.0, 185.0], [120.0, 167.66666666666666], [121.0, 123.5], [122.0, 176.5], [123.0, 10792.2], [124.0, 251.0], [125.0, 3260.0], [127.0, 1209.8], [126.0, 22155.0], [128.0, 476.5], [129.0, 1416.0], [130.0, 287.6666666666667], [133.0, 1652.0], [135.0, 5427.25], [132.0, 3551.25], [134.0, 864.3333333333333], [131.0, 19741.0], [136.0, 1600.0], [139.0, 807.8], [140.0, 3958.2], [141.0, 1058.5], [142.0, 453.2], [143.0, 4698.375], [137.0, 6213.0], [144.0, 129.0], [145.0, 591.3333333333334], [149.0, 740.6666666666667], [150.0, 920.5], [151.0, 552.75], [148.0, 11531.333333333332], [147.0, 3784.8], [146.0, 2347.0], [152.0, 3012.285714285714], [153.0, 586.5], [154.0, 6662.428571428571], [155.0, 762.25], [156.0, 1109.0], [158.0, 3053.75], [159.0, 1415.0], [157.0, 9840.0], [161.0, 817.0], [162.0, 824.5], [163.0, 1315.1666666666667], [164.0, 1165.6], [166.0, 4036.0], [167.0, 2672.0999999999995], [160.0, 3223.5], [165.0, 1546.0], [168.0, 1805.888888888889], [169.0, 1209.5], [170.0, 2240.444444444445], [171.0, 4164.200000000001], [173.0, 1918.5], [175.0, 977.5], [174.0, 329.6], [172.0, 5391.5], [176.0, 1867.4], [178.0, 3854.181818181818], [177.0, 1446.8], [179.0, 1173.0], [183.0, 7438.333333333333], [182.0, 112.0], [181.0, 6159.333333333334], [184.0, 1771.0], [185.0, 12258.0], [187.0, 2455.6], [188.0, 469.0], [189.0, 117.33333333333333], [190.0, 6970.6], [191.0, 114.0], [192.0, 429.0], [193.0, 121.0], [197.0, 834.0], [199.0, 292.0], [200.0, 1731.5], [201.0, 2747.0], [202.0, 5376.75], [203.0, 308.0], [204.0, 516.8571428571428], [205.0, 418.0], [212.0, 12044.0], [213.0, 3119.5], [214.0, 8250.666666666666], [210.0, 130.0], [208.0, 19577.0], [216.0, 2852.0], [218.0, 2211.5], [221.0, 6315.666666666666], [222.0, 3105.5], [223.0, 122.5], [220.0, 822.0], [219.0, 15642.0], [217.0, 198.0], [224.0, 612.3333333333333], [225.0, 6105.666666666666], [229.0, 2200.0], [230.0, 455.0], [231.0, 3436.75], [227.0, 4477.0], [226.0, 11257.0], [232.0, 3411.5], [234.0, 4750.0], [237.0, 355.0], [239.0, 4792.0], [235.0, 11858.5], [233.0, 16359.0], [242.0, 6698.666666666666], [241.0, 6409.75], [243.0, 2839.0], [246.0, 1460.0], [247.0, 6653.0], [240.0, 9543.0], [248.0, 8781.5], [249.0, 181.0], [250.0, 510.0], [252.0, 292.0], [255.0, 3078.2], [254.0, 6603.333333333334], [251.0, 5746.666666666666], [259.0, 821.0], [257.0, 2417.0], [256.0, 3430.5], [258.0, 9814.0], [260.0, 102.5], [262.0, 7709.0], [263.0, 117.5], [264.0, 1663.5], [266.0, 933.0], [265.0, 7137.666666666666], [267.0, 9224.5], [268.0, 2154.2], [269.0, 5136.6], [270.0, 3432.0], [271.0, 6221.666666666666], [275.0, 4286.0], [276.0, 1340.0], [277.0, 631.0], [279.0, 1724.5], [274.0, 2098.0], [273.0, 9180.0], [272.0, 8525.0], [278.0, 2228.0], [280.0, 1113.5], [287.0, 3916.25], [281.0, 2565.0], [283.0, 3433.7272727272725], [282.0, 5220.714285714285], [285.0, 195.0], [286.0, 2471.142857142857], [288.0, 2238.2], [290.0, 2439.40625], [292.0, 2006.7222222222222], [293.0, 300.0], [291.0, 2039.875]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/otc_disease/get_by_alias", "isController": false}, {"data": [[149.34300000000013, 3804.2340000000045]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/otc_disease/get_by_alias-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 293.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6594.366666666667, "minX": 1.66159752E12, "maxY": 243682.36666666667, "series": [{"data": [[1.66159776E12, 243682.36666666667], [1.66159758E12, 125922.68333333333], [1.6615977E12, 212381.43333333332], [1.66159752E12, 178290.65]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66159776E12, 12693.3], [1.66159758E12, 6594.366666666667], [1.6615977E12, 13292.466666666667], [1.66159752E12, 10785.633333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66159776E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1050.8193916349817, "minX": 1.66159752E12, "maxY": 27062.463636363627, "series": [{"data": [[1.66159776E12, 3249.6040044493866], [1.66159758E12, 2253.0590717299574], [1.6615977E12, 1850.6472545757085], [1.66159752E12, 1050.8193916349817]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/medicines/get_med_by_dis_alias_w_pag", "isController": false}, {"data": [[1.66159776E12, 27062.463636363627], [1.66159758E12, 16721.43442622951], [1.6615977E12, 11495.125000000004], [1.66159752E12, 6989.5]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.66159776E12, 14768.699186991866], [1.66159758E12, 8722.415094339623], [1.6615977E12, 2145.0083857442337], [1.66159752E12, 1447.3400576368874]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/otc_disease/get_by_alias", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66159776E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 519.6939163498101, "minX": 1.66159752E12, "maxY": 17052.5409090909, "series": [{"data": [[1.66159776E12, 1584.9599555061175], [1.66159758E12, 1300.0400843881866], [1.6615977E12, 912.0033277870218], [1.66159752E12, 519.6939163498101]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/medicines/get_med_by_dis_alias_w_pag", "isController": false}, {"data": [[1.66159776E12, 17052.5409090909], [1.66159758E12, 11349.131147540984], [1.6615977E12, 7544.0125], [1.66159752E12, 4831.064102564104]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.66159776E12, 12029.162601626014], [1.66159758E12, 8079.698113207548], [1.6615977E12, 1892.0335429769395], [1.66159752E12, 1278.4293948126806]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/otc_disease/get_by_alias", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66159776E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66159752E12, "maxY": 4425.894308943089, "series": [{"data": [[1.66159776E12, 0.09010011123470522], [1.66159758E12, 0.0], [1.6615977E12, 0.0], [1.66159752E12, 0.0]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/medicines/get_med_by_dis_alias_w_pag", "isController": false}, {"data": [[1.66159776E12, 3901.9681818181793], [1.66159758E12, 1699.16393442623], [1.6615977E12, 1328.9875], [1.66159752E12, 1027.076923076923]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.66159776E12, 4425.894308943089], [1.66159758E12, 1941.11320754717], [1.6615977E12, 881.1027253668767], [1.66159752E12, 531.7896253602306]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/otc_disease/get_by_alias", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66159776E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 92.0, "minX": 1.66159752E12, "maxY": 48168.0, "series": [{"data": [[1.66159776E12, 48168.0], [1.66159758E12, 31928.0], [1.6615977E12, 18691.0], [1.66159752E12, 11012.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66159776E12, 19785.199999999997], [1.66159758E12, 12155.399999999998], [1.6615977E12, 6348.000000000001], [1.66159752E12, 3188.0000000000014]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66159776E12, 38901.36000000001], [1.66159758E12, 26877.400000000016], [1.6615977E12, 15416.570000000018], [1.66159752E12, 9208.14]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66159776E12, 28328.99999999994], [1.66159758E12, 17093.6], [1.6615977E12, 9556.249999999996], [1.66159752E12, 5215.199999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66159776E12, 92.0], [1.66159758E12, 95.0], [1.6615977E12, 99.0], [1.66159752E12, 96.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66159776E12, 211.0], [1.66159758E12, 196.0], [1.6615977E12, 576.0], [1.66159752E12, 469.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66159776E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 118.0, "minX": 1.0, "maxY": 54445.0, "series": [{"data": [[2.0, 227.5], [33.0, 122.0], [36.0, 203.0], [41.0, 294.0], [43.0, 418.5], [42.0, 144.0], [45.0, 537.0], [44.0, 423.0], [47.0, 454.0], [46.0, 268.5], [48.0, 227.5], [49.0, 330.0], [3.0, 222.0], [51.0, 514.5], [50.0, 156.0], [52.0, 570.5], [53.0, 465.5], [55.0, 637.5], [54.0, 158.0], [57.0, 300.0], [56.0, 588.5], [59.0, 429.0], [61.0, 395.5], [66.0, 469.0], [64.0, 420.0], [4.0, 266.0], [70.0, 343.5], [68.0, 340.5], [72.0, 322.0], [73.0, 217.0], [6.0, 238.0], [7.0, 223.0], [8.0, 179.5], [10.0, 204.5], [12.0, 139.0], [13.0, 166.0], [15.0, 188.0], [1.0, 189.0], [16.0, 838.5], [18.0, 156.5], [19.0, 168.0], [20.0, 200.5], [22.0, 206.0], [24.0, 118.0], [25.0, 127.0], [29.0, 130.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[36.0, 35135.5], [19.0, 35517.0], [46.0, 31868.0], [6.0, 54445.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 73.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 769.5, "series": [{"data": [[2.0, 221.0], [33.0, 120.0], [36.0, 203.0], [41.0, 244.0], [43.0, 245.0], [42.0, 137.0], [45.0, 343.0], [44.0, 322.0], [47.0, 282.0], [46.0, 207.5], [48.0, 227.5], [49.0, 221.5], [3.0, 130.0], [51.0, 249.0], [50.0, 145.5], [52.0, 283.5], [53.0, 265.0], [55.0, 224.0], [54.0, 140.0], [57.0, 197.0], [56.0, 261.0], [59.0, 228.0], [61.0, 215.5], [66.0, 279.0], [64.0, 255.0], [4.0, 235.0], [70.0, 252.5], [68.0, 205.5], [72.0, 223.0], [73.0, 145.0], [6.0, 233.0], [7.0, 216.0], [8.0, 166.5], [10.0, 181.5], [12.0, 127.5], [13.0, 154.0], [15.0, 164.0], [1.0, 188.0], [16.0, 769.5], [18.0, 149.5], [19.0, 168.0], [20.0, 168.5], [22.0, 197.5], [24.0, 109.0], [25.0, 122.0], [29.0, 126.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[36.0, 0.0], [19.0, 0.0], [46.0, 0.0], [6.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 73.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.75, "minX": 1.66159752E12, "maxY": 21.633333333333333, "series": [{"data": [[1.66159776E12, 13.366666666666667], [1.66159758E12, 6.75], [1.6615977E12, 21.633333333333333], [1.66159752E12, 16.583333333333332]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66159776E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.66159752E12, "maxY": 17.966666666666665, "series": [{"data": [[1.66159776E12, 16.916666666666668], [1.66159758E12, 8.783333333333333], [1.6615977E12, 17.966666666666665], [1.66159752E12, 14.55]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.66159776E12, 0.11666666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66159776E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.66159752E12, "maxY": 14.983333333333333, "series": [{"data": [[1.66159776E12, 14.983333333333333], [1.66159758E12, 7.9], [1.6615977E12, 10.016666666666667], [1.66159752E12, 8.766666666666667]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/medicines/get_med_by_dis_alias_w_pag-success", "isController": false}, {"data": [[1.66159776E12, 3.55], [1.66159758E12, 2.033333333333333], [1.6615977E12, 1.3333333333333333], [1.66159752E12, 1.3]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.66159776E12, 0.11666666666666667]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/otc_disease/get_by_alias-failure", "isController": false}, {"data": [[1.66159776E12, 0.11666666666666667]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.66159776E12, 1.9333333333333333], [1.66159758E12, 0.8833333333333333], [1.6615977E12, 7.95], [1.66159752E12, 5.783333333333333]], "isOverall": false, "label": "https://api.osudpotro.com/api/v1/otc_disease/get_by_alias-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66159776E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.66159752E12, "maxY": 20.466666666666665, "series": [{"data": [[1.66159776E12, 20.466666666666665], [1.66159758E12, 10.816666666666666], [1.6615977E12, 19.3], [1.66159752E12, 15.85]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.66159776E12, 0.23333333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66159776E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

